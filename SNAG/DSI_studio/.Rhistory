rows2grab <- c("Tract Name", "number of tracts","mean length(mm)","span(mm)", "total volume(mm^3)")
behavior_sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_Behavior.csv") # This is a sheet that has all of the subjects with at least one usable behavior task (Loop, maze, dsp)
DSP_DSI_DF <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/DSPDSI.csv") %>% filter(!is.na(subject_id)) # This is from the main subject sheet and includes all subjects that have a dsp score AND should have a scan with them
path2tractometry <- ("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI/Tractometry/output")
# sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/subject_info.csv") # I dont think this one is necessary
# List of all subject directories
tractometry_subfiles <- list.dirs("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/DSI/Tractometry/output", full.names = FALSE,recursive = FALSE)
# data_dsp <- behavior_sub_info %>% filter(dsp_useable == "Yes") %>% filter(subject_id < 500) # dataframe with all subjects that have usable DSP
f_data_dsp <- DSP_DSI_DF %>% filter(sex == "Female")
m_data_dsp<- DSP_DSI_DF %>% filter(sex=="Male") # Men only
#This is going through and reading in the output from dsi studio and then combining it into one dataframe and then combining that with our data frame that contains our subject data.
# create an empty dataframe to loop into
fornix_output_df <-  data.frame(matrix(ncol = 5, nrow = 0)) %>% `colnames<-`(c("subjects","QA_L_fornix","QA_R_fornix","MD_L_fornix","MD_R_fornix"))
# creating a loop to go into each sub dir. read in each txt file and extract the
for(file in 1:length((tractometry_subfiles))){
# creating an empty single row dataframe
empty_loop_df <- data.frame(matrix(ncol = 5, nrow = 1))  %>% `colnames<-`(c("subjects","QA_L_fornix","QA_R_fornix","MD_L_fornix","MD_R_fornix"))
# inputting the subject id
empty_loop_df$subjects <- str_remove(tractometry_subfiles[file],"sub-")
# Let's do a quick folder check to make sure it's not empty
if(file.size(paste0(path2tractometry,"/",tractometry_subfiles[file])) < 96) next
#grabbing all the left and right variables
if (file.exists(paste0(path2tractometry,"/",tractometry_subfiles[file],"/",tractometry_subfiles[file],"_space-T1w_desc-preproc_dwi.ProjectionBasalGanglia_FornixL.stat.txt")) == FALSE) {
L_fornix <- data.frame(matrix(ncol = 2, nrow = 2))
} else{
L_fornix <- read_delim(paste0(path2tractometry,"/",tractometry_subfiles[file],"/",tractometry_subfiles[file],"_space-T1w_desc-preproc_dwi.ProjectionBasalGanglia_FornixL.stat.txt"),col_names = FALSE) %>% filter(X1 %in% c("qa","md"))
}
if (file.exists(paste0(path2tractometry,"/",tractometry_subfiles[file],"/",tractometry_subfiles[file],"_space-T1w_desc-preproc_dwi.ProjectionBasalGanglia_FornixR.stat.txt")) == FALSE) {
R_fornix <- data.frame(matrix(ncol = 2, nrow = 2))
}else{
R_fornix <- read_delim(paste0(path2tractometry,"/",tractometry_subfiles[file],"/",tractometry_subfiles[file],"_space-T1w_desc-preproc_dwi.ProjectionBasalGanglia_FornixR.stat.txt"),col_names = FALSE) %>% filter(X1 %in% c("qa","md"))
}
# Putting them into out dataframe
#Grab all QA values
empty_loop_df$QA_L_fornix <- L_fornix$X2[1] # row 1 is QA
empty_loop_df$QA_R_fornix <- R_fornix$X2[1]
empty_loop_df$MD_L_fornix <- L_fornix$X2[2] # row 2 is MD
empty_loop_df$MD_R_fornix <- R_fornix$X2[2]
fornix_output_df <- rbind(fornix_output_df,empty_loop_df)
}
# now we have to grab the information from sub info and combine but we need to make sure we're grabbing all the correct subjects from each dataframe. Something to note is that this final fornix data frame is based off of scans and includes some people who do not have a DSP score. There's probably a way to simplify the code below.
altered_sub_info <- DSP_DSI_DF %>% filter(subject_id %in% c(fornix_output_df$subjects))
fornix_output_df <- fornix_output_df %>%  filter(subjects %in% c(DSP_DSI_DF$subject_id))
clean_DF <- cbind(altered_sub_info,fornix_output_df)
clean_DF$QA_Whole_Fornix <- rowMeans(clean_DF[,c("QA_L_fornix","QA_R_fornix")])
clean_DF$MD_Whole_Fornix <- rowMeans(clean_DF[,c("MD_L_fornix","MD_R_fornix")])
all_women_clean_df <- clean_DF %>% filter(sex=="Female")
all_men_clean_df <- clean_DF %>% filter(sex=="Male")
View(behavior_sub_info)
Behavioronly_data_dsp <- behavior_sub_info %>% filter(dsp_useable == "Yes") %>% filter(subject_id < 500)
View(Behavioronly_data_dsp)
Behavioronly_Female_data_dsp <- behavior_sub_info %>% filter(dsp_useable == "Yes") %>% filter(subject_id < 500) filter(sex=="Female")
Behavioronly_Female_data_dsp <- behavior_sub_info %>% filter(dsp_useable == "Yes") %>% filter(subject_id < 500) %>%  filter(sex=="Female")
ggplot(Behavioronly_data_dsp,aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(DSP_DSI_DF$dsp_si_true_pct)
ggplot(Behavioronly_data_dsp,aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(DSP_DSI_DF$dsp_si_true_pct)
behavior_sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_Behavior.csv") %>%  filter(subject_id != 352)#
DSP_DSI_DF <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/DSPDSI.csv") %>% filter(!is.na(subject_id)) %>%  filter(subject_id != 352)
behavior_sub_info <- read.csv("/Users/danielacossio/Documents/Chrastil_Lab/Projects/SNAG/sub_info_sheets/SNAG_Behavior.csv")
ggplot(DSP_DSI_DF,aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(DSP_DSI_DF$dsp_si_true_pct)
ggplot(DSP_DSI_DF, aes(x=subject_id,y=dsp_si_true_pct)) +
geom_point(size=4, color = "black") +    labs(x ="sex", y = "solution index") + scale_fill_manual(values = c("#E2929D","#502E23"))
test <- DSP_DSI_DF$dsp_si_true_pct %>% sort() %>% as.data.frame() %>% mutate(rank=1:69)
ggplot(DSP_DSI_DF, aes(x=subject_id,y=dsp_si_true_pct)) +
geom_point(size=4, color = "black") +    labs(x ="sex", y = "solution index") + scale_fill_manual(values = c("#E2929D","#502E23"))
test <- DSP_DSI_DF$dsp_si_true_pct %>% sort() %>% as.data.frame() %>% mutate(rank=1:68)
ggplot(test, aes(x=rank,y=.)) + geom_point(size=4, color = "black")
TableOutput(describe(DSP_DSI_DF))
ReadingCSVFunc <- function(pathname){
read.delim(paste0(working_dir, pathname), header=FALSE,sep = "\t")
#README
#Purpose: to read in the CSVs that I extract from the correlational tractography from DSI studio.
#Inputs: You simply need to include the path to the CSV from the working directory. We set our working dir above so you just need the rest of the path.
}
CleanInput <- function(DF){
#README
# The purpose of this function is to take the CSV that I extract from the correlational tractography and that has already been read into the script and made into a dataframe. It is then cleaned to create a clean output that grabs the following rows: "Tract Name", "number of tracts","mean length(mm)", "total volume(mm^3)"), and then re organizes the information for each subject into one dataframe. There's an if statement because some CSVs only have one significant tract and it needs a slightly different code to reorganize that.
#INPUT: Should take in a DF that was created when you read in the CSV from the correlational tract analysis. The output of the ReadingCSVFunc
DF <- DF %>% remove_empty("cols")
if(length(DF) < 3){
DF <- DF %>%
filter(V1 %in% rows2grab) %>%
t() %>%
`colnames<-`(rows2grab) %>%
as.data.frame() %>%
`[`(-c(1),)
} else{
DF <- DF %>%
filter(V1 %in% rows2grab) %>%
t() %>%  `colnames<-`(rows2grab) %>% as.data.frame(x = .) %>%
`[`(-c(1),)
}
return(DF)
}
Extract_raw_values <- function(DF,Metric) {
# Purpose of this function is to clean the data without me having to copy and paste everything later.
# Data = raw unclean dataframe we want to clean up
# Metric will be either MD or QA
# sex is either male or female
# Let's read in our data frame
# grab  ROIcolumn names
colNames <- DF  %>% remove_empty("cols") %>%
filter(V1 == "Tract Name") %>% t() %>% `[`(-1)
subinfo <- DSP_DSI_DF  %>% dplyr::select(c("subject_id", "sex", "age_scan_years", "dsp_si_true_pct", "estradiol_spatial_pg_ml","estradiol_scan_pg_ml","testosterone_spatial_ng_dl", "fsh_spatial_miu_ml","fsh_spatial_miu_ml","progesterone_scan_ng_ml","progesterone_spatial_ng_ml"))
# Let's grab our values
if (Metric == "MD"){
Values <- DF %>% remove_empty("cols") %>%
filter(str_detect(V1, c("mean_md"))) %>%
`colnames<-`(c("Subjects",colNames))
}
else{
Values <- DF %>%
remove_empty("cols") %>%
filter(str_detect(V1, c("mean_qa"))) %>%
`colnames<-`(c("Subjects",colNames)) %>% filter(!str_detect(Subjects, c("sub-369")))
}
# now let's put this together
ConvToNum <-  apply(Values[,2:length(Values)],2, as.numeric)
Values[,2:length(Values)] <- ConvToNum
cleanedDF <- cbind(subinfo,Values) %>% na.omit() %>% dplyr::select(-c("Subjects"))
return (cleanedDF)
}
TableOutput <- function(df){
knitr::kable(df, row.names=F) %>%
kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>%
scroll_box(width = "800px", height = "300px")
}
TableOutput(describe(DSP_DSI_DF))
# this one uses spatial hormones
cor.test(f_data_dsp$estradiol_spatial_pg_ml,
f_data_dsp$dsp_si_true_pct,
conf.level = 0.95,
alternative = "greater",
method = "spearman")
#This one uses scan hormones
cor.test(f_data_dsp$estradiol_scan_pg_ml,
f_data_dsp$dsp_si_true_pct,
conf.level = 0.95,
alternative = "greater",
method = "spearman")
cor.test(f_data_dsp$estradiol_spatial_pg_ml,
f_data_dsp$dsp_si_true_pct,
conf.level = 0.95,
alternative = "greater",
method = "spearman")
#This one uses scan hormones
cor.test(f_data_dsp$estradiol_scan_pg_ml,
f_data_dsp$dsp_si_true_pct,
conf.level = 0.95,
alternative = "greater",
method = "spearman")
cor.test(Behavioronly_Female_data_dsp$estradiol_spatial_pg_ml,
Behavioronly_Female_data_dsp$dsp_si_true_pct,
conf.level = 0.95,
alternative = "greater",
method = "spearman")
pcor.test(f_data_dsp$estradiol_spatial_pg_ml,
f_data_dsp$dsp_si_true_pct,
f_data_dsp$age_spatial_years,
method = "spearman") #p-value=0.02876795
x <- Behavioronly_Female_data_dsp$estradiol_spatial_pg_ml
y <- Behavioronly_Female_data_dsp$dsp_si_true_pct
z <- Behavioronly_Female_data_dsp$age_spatial_years
cor.test(lm(x ~ z)$residuals,
lm(y ~ z)$residuals,
alternative = "less",
conf.level = 0.95,
method = "spearman") #0.05638
pcor.test(Behavioronly_Female_data_dsp$estradiol_spatial_pg_ml,
Behavioronly_Female_data_dsp$dsp_si_true_pct,
Behavioronly_Female_data_dsp$age_spatial_years,
method = "spearman") #p-value=0.02876795
cor.test(Behavioronly_Female_data_dsp$estradiol_spatial_pg_ml,
Behavioronly_Female_data_dsp$dsp_si_true_pct,
conf.level = 0.95,
alternative = "greater",
method = "spearman")
View(Behavioronly_Female_data_dsp)
pcor.test(Behavioronly_Female_data_dsp$estradiol_spatial_pg_ml,
Behavioronly_Female_data_dsp$dsp_si_true_pct,
Behavioronly_Female_data_dsp$age_spatial_years,
method = "spearman") #p-value=0.02876795
cor.test(Behavioronly_Female_data_dsp$estradiol_spatial_pg_ml,
Behavioronly_Female_data_dsp$dsp_si_true_pct,
conf.level = 0.95,
alternative = "greater",
method = "spearman")
x <- Behavioronly_Female_data_dsp$estradiol_spatial_pg_ml
y <- Behavioronly_Female_data_dsp$dsp_si_true_pct
z <- Behavioronly_Female_data_dsp$age_spatial_years
cor.test(lm(x ~ z)$residuals,
lm(y ~ z)$residuals,
alternative = "greater",
conf.level = 0.95,
method = "spearman") #0.05638
f_data_dsp_outlier_e <- f_data_dsp  %>%  filter(!subject_id %in% c(
"415", "355"))
cor.test(f_data_dsp_outlier_e$estradiol_spatial_pg_ml,
f_data_dsp_outlier_e$dsp_si_true_pct,
alternative = "greater",
conf.level = 0.95,
method = "spearman") #p-value:0.003529
# this one uses spatial hormones
cor.test(Behavioronly_Female_data_dsp$estradiol_spatial_pg_ml,
Behavioronly_Female_data_dsp$dsp_si_true_pct,
conf.level = 0.95,
alternative = "greater",
method = "spearman")
# #This one uses scan hormones
# cor.test(Behavioronly_Female_data_dsp$estradiol_scan_pg_ml,
#          Behavioronly_Female_data_dsp$dsp_si_true_pct,
#          conf.level = 0.95,
#          alternative = "greater",
#          method = "spearman")
x <- Behavioronly_Female_data_dsp$estradiol_spatial_pg_ml
y <- Behavioronly_Female_data_dsp$dsp_si_true_pct
z <- Behavioronly_Female_data_dsp$age_spatial_years
cor.test(lm(x ~ z)$residuals,
lm(y ~ z)$residuals,
alternative = "greater",
conf.level = 0.95,
method = "spearman") #0.05638
pcor.test(Behavioronly_Female_data_dsp$estradiol_spatial_pg_ml,
Behavioronly_Female_data_dsp$dsp_si_true_pct,
Behavioronly_Female_data_dsp$age_spatial_years,
method = "spearman") #p-value=0.02876795
cor.test(f_data_dsp$estradiol_spatial_pg_ml,
f_data_dsp$dsp_si_true_pct,
conf.level = 0.95,
alternative = "greater",
method = "spearman")
x <- f_data_dsp$estradiol_spatial_pg_ml
y <- f_data_dsp$dsp_si_true_pct
z <- f_data_dsp$age_spatial_years
cor.test(lm(x ~ z)$residuals,
lm(y ~ z)$residuals,
alternative = "greater",
conf.level = 0.95,
method = "spearman") #0.05638
pcor.test(f_data_dsp$estradiol_spatial_pg_ml,
f_data_dsp$dsp_si_true_pct,
f_data_dsp$age_spatial_years,
method = "spearman") #p-value=0.02876795
f_beh_data_outlier_e <- Behavioronly_Female_data_dsp  %>%  filter(!subject_id %in% c(
"415", "355"))
f_beh_data_outlier_e <- Behavioronly_Female_data_dsp  %>%  filter(!subject_id %in% c(
"415", "355"))
cor.test(f_beh_data_outlier_e$estradiol_spatial_pg_ml,
f_beh_data_outlier_e$dsp_si_true_pct,
alternative = "greater",
conf.level = 0.95,
method = "spearman")
View(f_beh_data_outlier_e)
ggplot(data = Behavioronly_Female_data_dsp, aes(x = estradiol_spatial_pg_ml,
y = dsp_si_true_pct, color=repo_status))
ggplot(data = Behavioronly_Female_data_dsp, aes(x = estradiol_spatial_pg_ml,
y = dsp_si_true_pct, color=repo_status)) +
geom_point(aes(color = factor(repo_status)), size=3)
ggplot(data = Behavioronly_Female_data_dsp, aes(x = estradiol_spatial_pg_ml,
y = dsp_si_true_pct, color=repo_status)) +
geom_point(aes(color = factor(repo_status)), size=3) +
scale_color_manual(values=c("#7d4c5a", "#CD8A9B","#806d71")) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth",
color="Black",
se=FALSE)+
theme(panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
ggplot(data = Behavioronly_Female_data_dsp, aes(x = estradiol_spatial_pg_ml,
y = dsp_si_true_pct, color=repo_status)) +
geom_point(aes(color = factor(repo_status)), size=4) +
scale_color_manual(values=c("#7d4c5a", "#CD8A9B","#806d71")) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth",
color="Black",
se=FALSE)+
theme(panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
ggplot(data = Behavioronly_Female_data_dsp, aes(x = estradiol_spatial_pg_ml,
y = dsp_si_true_pct, color=repo_status)) +
geom_point(aes(color = factor(repo_status)), size=4) +
scale_color_manual(values=c("#7d4c5a", "#CD8A9B","#806d71")) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth",
color="Black",
se=FALSE)+
theme(panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
# this one uses spatial hormones
cor.test(Behavioronly_Female_data_dsp$fsh_spatial_miu_ml,
Behavioronly_Female_data_dsp$dsp_si_true_pct,
conf.level = 0.95,
alternative = "greater",
method = "spearman")
# #This one uses scan hormones
# cor.test(Behavioronly_Female_data_dsp$fsh_spatial_miu_ml,
#          Behavioronly_Female_data_dsp$dsp_si_true_pct,
#          conf.level = 0.95,
#          alternative = "greater",
#          method = "spearman")
# this one uses spatial hormones
cor.test(Behavioronly_Female_data_dsp$fsh_spatial_miu_ml,
Behavioronly_Female_data_dsp$dsp_si_true_pct,
conf.level = 0.95,
alternative = "less",
method = "spearman")
# #This one uses scan hormones
# cor.test(Behavioronly_Female_data_dsp$fsh_spatial_miu_ml,
#          Behavioronly_Female_data_dsp$dsp_si_true_pct,
#          conf.level = 0.95,
#          alternative = "greater",
#          method = "spearman")
length(is.na(Behavioronly_Female_data_dsp$fsh_spatial_miu_ml))
View(Behavioronly_Female_data_dsp)
View(m_data_dsp)
length(is.na(Behavioronly_Female_data_dsp$fsh_spatial_miu_ml))
View(Behavioronly_Female_data_dsp)
is.na(Behavioronly_Female_data_dsp$fsh_spatial_miu_ml))
is.na(Behavioronly_Female_data_dsp$fsh_spatial_miu_ml)
count(is.na(Behavioronly_Female_data_dsp$fsh_spatial_miu_ml))
x <- Behavioronly_Female_data_dsp$fsh_spatial_miu_ml
y <- Behavioronly_Female_data_dsp$dsp_si_true_pct
z <- Behavioronly_Female_data_dsp$age_spatial_years
cor.test(lm(x ~ z)$residuals,
lm(y ~ z)$residuals,
alternative = "less",
conf.level = 0.95,
method = "spearman") #0.05638
ggplot(data = Behavioronly_Female_data_dsp, aes(x = estradiol_spatial_pg_ml,
y = dsp_si_true_pct, color=repo_status)) +
geom_point(aes(color = factor(repo_status)), size=4) +
scale_color_manual(values=c("#7d4c5a", "#CD8A9B","#806d71")) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth",
color="Black",
se=FALSE)+
theme(panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
ggplot(Behavioronly_data_dsp,aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
shapiro.test(DSP_DSI_DF$dsp_si_true_pct)
ggplot(Behavioronly_data_dsp,aes(x=dsp_si_true_pct)) +
geom_bar(width = 0.1)
FSH__Female_data_dsp <- Behavioronly_Female_data_dsp %>% filter((!is.na(fsh_spatial_miu_ml))
FSH__Female_data_dsp <- Behavioronly_Female_data_dsp %>% filter(!is.na(fsh_spatial_miu_ml))
FSH__Female_data_dsp <- Behavioronly_Female_data_dsp %>% filter(!is.na(fsh_spatial_miu_ml))
# we need to make a new DF for FSH specifc people
FSH__Female_data_dsp <- Behavioronly_Female_data_dsp %>% filter(!is.na(fsh_spatial_miu_ml))
# this one uses spatial hormones
cor.test(FSH__Female_data_dsp$fsh_spatial_miu_ml,
FSH__Female_data_dsp$dsp_si_true_pct,
conf.level = 0.95,
alternative = "less",
method = "spearman")
# #This one uses scan hormones
# cor.test(Behavioronly_Female_data_dsp$fsh_spatial_miu_ml,
#          Behavioronly_Female_data_dsp$dsp_si_true_pct,
#          conf.level = 0.95,
#          alternative = "less",
#          method = "spearman")
x <- FSH__Female_data_dsp$fsh_spatial_miu_ml
y <- FSH__Female_data_dsp$dsp_si_true_pct
z <- FSH__Female_data_dsp$age_spatial_years
cor.test(lm(x ~ z)$residuals,
lm(y ~ z)$residuals,
alternative = "less",
conf.level = 0.95,
method = "spearman")
ggplot(data = FSH__Female_data_dsp, aes(x = fsh_spatial_miu_ml,
y = dsp_si_true_pct)) +
geom_point(aes(color = factor(repo_status)), size=3) +
scale_color_manual(values=c("#7d4c5a", "#CD8A9B","#806d71")) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth",
color="Black",
se=FALSE) +
theme(panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
ggplot(data = FSH__Female_data_dsp, aes(x = fsh_spatial_miu_ml,
y = dsp_si_true_pct)) +
geom_point(aes(color = factor(repo_status)), size=4) +
scale_color_manual(values=c("#7d4c5a", "#CD8A9B","#806d71")) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth",
color="Black",
se=FALSE) +
theme(panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
ggplot(data = FSH__Female_data_dsp, aes(x = fsh_spatial_miu_ml,
y = dsp_si_true_pct)) +
geom_point(aes(color = factor(repo_status)), size=4) +
scale_color_manual(values=c("#7d4c5a", "#CD8A9B","#806d71")) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth",
color="Black",
se=FALSE) +
theme(panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
library(ggplot2)
#(plyr)
library(tidyverse)
# library(dplyr)
# library(tidyr)
library(stringr)
library(kableExtra)
# library(data.table)
# library(network)
# library(tidygraph)
# library(ggraph)
# library(igraph)
# library(networkD3)
# library(CINNA)
# library(umap)
# library(plotly)
#library(factoextra)
#library(lsr)
# library(car)
library(ggpubr)
#library(entropy)
#library(ds4psy)
# library(pROC)
#library(devtools)
#library(BRRR)
#library(stats)
#library(afex)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(nationalparkcolors)
library(gridExtra)
library(markdown)
library(psych)
library(ppcor)
library(mediation)
ggplot(data = FSH__Female_data_dsp, aes(x = fsh_spatial_miu_ml,
y = dsp_si_true_pct)) +
geom_point(aes(color = factor(repo_status)), size=4) +
scale_color_manual(values=c("#7d4c5a", "#CD8A9B","#806d71")) +
stat_smooth(method = "lm",
formula = y ~ x,
geom = "smooth",
color="Black",
se=FALSE) +
theme(panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold"))
DSP_DSI_DF %>% ggplot(aes(x = factor(repo_status, levels=c("Men", "Pre", "Peri", "Post")), y = dsp_si_true_pct, fill= repo_status)) +
geom_boxplot(width=0.5,fatten = 1, show.legend = FALSE) +
geom_point(shape=16, position=position_jitter(0.1)) +
scale_fill_manual(values=c("#6c6c6e","#7d4c5a", "#CD8A9B","#806d71"))+
scale_y_continuous(breaks = seq(0, 1, by = 0.2)) +
xlab("Sex")+
ylab("Solution Index") +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold" )
)
# ggboxplot(sub_info, x = "REPO", y = "maze_accuracy_pct",
#           color = "REPO",
#           order = c("Male", "Pre", "Peri", "Post"),
#           ylab = "Wayfinding Success", xlab = "Group")
DSP_DSI_DF %>% ggplot(aes(x = factor(repo_status, levels=c("Men", "Pre", "Peri", "Post")), y = dsp_si_true_pct, fill= repo_status)) +
geom_boxplot(width=0.5,fatten = 1, show.legend = FALSE) +
geom_point(shape=16, position=position_jitter(0.1)) +
scale_fill_manual(values=c("#6c6c6e","#7d4c5a", "#CD8A9B","#806d71"))+
scale_y_continuous(breaks = seq(0, 1, by = 0.2)) +
xlab("Sex")+
ylab("Solution Index") +
theme(axis.title.x = element_text(vjust=- 4, size = 16),
axis.title.y = element_text(vjust=8, size = 16),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
panel.background =element_blank(),
axis.line = element_line(colour = "black"),
plot.margin = margin(1, 2, 1, 1.5, "cm"),
plot.title = element_text(hjust = 0.5, vjust = 2, size = 16, face="bold" )
)
