young_HP_df <-
young_raw_df %>%  dplyr::select(
"subject_id",
"sex",
"age_spatial_years",
"loop_pe_rad3_m",
"loop_pe_avg_m",
"loop_de_rad3_degree",
"loop_de_avg_degree",
"loop_ae_rad3_degree",
"loop_ae_avg_degree",
"Left-Hippocampus",
"Right-Hippocampus",
"eTIV",
"VaisTIV_VBM"
) %>% mutate(avg_t1_hipp = (.$`Left-Hippocampus` + .$`Right-Hippocampus`) /
2) %>% filter(!is.na(eTIV)) # Need to make sure we remove subj without scan # N=43
young_HP_female_df <- young_HP_df %>% filter(sex=="Female")
young_HP_male_df <- young_HP_df %>%  filter(sex== "Male")
young_HP_df_adj <- young_HP_df %>%  mutate(VaisTIV_VBM = VaisTIV_VBM*1000)
# Okay so we need to do a bit of changing here by bringing our VBM to scale with midlife
young_HP_df_adj <- young_HP_df %>%  mutate(VaisTIV_VBM = VaisTIV_VBM*1000)
#v contains adjusted hip
# now we create the function for adjusting by TIV
# 1 Create function for apply to variables
Young_dividebyTIV <- function(x, na.rm = FALSE) (x/young_HP_df$VaisTIV_VBM)
# 2 Let's correct by mutating the columns using the TIV from freesurfer
young_HP_df_adj <- young_HP_df %>% mutate_at(vars(avg_t1_hipp, `Left-Hippocampus`, `Right-Hippocampus`),
Young_dividebyTIV) %>%
# multiplying to get proportions
mutate(avg_t1_hipp = avg_t1_hipp*1000,
`Left-Hippocampus` = `Left-Hippocampus`*1000,
`Right-Hippocampus` = `Right-Hippocampus`*1000)
View(young_HP_df_adj)
young_HP_df_adj <- young_HP_df %>%  mutate(VaisTIV_VBM = VaisTIV_VBM*1000)
young_HP_df_adj <- young_HP_df %>% mutate_at(vars(avg_t1_hipp, `Left-Hippocampus`, `Right-Hippocampus`),
Young_dividebyTIV)
young_HP_df_adj <- young_HP_df %>%  mutate(VaisTIV_VBM = VaisTIV_VBM*1000)
# Okay so we need to do a bit of changing here by bringing our VBM to scale with midlife
young_HP_df_adj <- young_HP_df %>%  mutate(VaisTIV_VBM = VaisTIV_VBM*1000)
#v contains adjusted hip
# now we create the function for adjusting by TIV
# 1 Create function for apply to variables
Young_dividebyTIV <- function(x, na.rm = FALSE) (x/young_HP_df_adj$VaisTIV_VBM)
# 2 Let's correct by mutating the columns using the TIV from freesurfer
young_HP_df_adj <- young_HP_df_adj %>% mutate_at(vars(avg_t1_hipp, `Left-Hippocampus`, `Right-Hippocampus`),
Young_dividebyTIV) %>%
# multiplying to get proportions
mutate(avg_t1_hipp = avg_t1_hipp*1000,
`Left-Hippocampus` = `Left-Hippocampus`*1000,
`Right-Hippocampus` = `Right-Hippocampus`*1000)
View(midlife_HP_df_adj)
View(young_HP_df)
# Okay so we need to do a bit of changing here by bringing our VBM to scale with midlife
young_HP_df_adj <- young_HP_df %>%  mutate(VaisTIV_VBM = VaisTIV_VBM*1000)
#v contains adjusted hip
# now we create the function for adjusting by TIV
# 1 Create function for apply to variables
Young_dividebyTIV <- function(x, na.rm = FALSE) (x/young_HP_df_adj$VaisTIV_VBM)
# 2 Let's correct by mutating the columns using the TIV from freesurfer
young_HP_df_adj <- young_HP_df_adj %>% mutate_at(vars(avg_t1_hipp, `Left-Hippocampus`, `Right-Hippocampus`),
Young_dividebyTIV) %>%
# multiplying to get proportions
mutate(avg_t1_hipp = avg_t1_hipp*1000,
`Left-Hippocampus` = `Left-Hippocampus`*1000,
`Right-Hippocampus` = `Right-Hippocampus`*1000)
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_pe_avg_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_pe_rad3_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_ae_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_ae_rad3_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_de_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Degrees Traveled at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_de_rad3_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Degrees Traveled at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "`Left-Hippocampus`", y = "loop_pe_avg_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "Left-Hippocampus", y = "loop_pe_avg_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "Left-Hippocampus", y = "loop_pe_rad3_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "Left-Hippocampus", y = "loop_ae_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "Left-Hippocampus", y = "loop_ae_rad3_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "Left-Hippocampus", y = "loop_de_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "Left-Hippocampus", y = "loop_de_rad3_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled at 3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "Right-Hippocampus", y = "loop_pe_avg_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "Right-Hippocampus", y = "loop_pe_rad3_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "Right-Hippocampus", y = "loop_ae_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "Right-Hippocampus", y = "loop_ae_rad3_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "Left-Hippocampus", y = "loop_de_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "Right-Hippocampus", y = "loop_de_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "Right-Hippocampus", y = "loop_de_rad3_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled at 3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Right-Hippocampus", y = "loop_pe_avg_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Right-Hippocampus", y = "loop_pe_rad3_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Right-Hippocampus", y = "loop_ae_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
#Creating an empty table to put everything in
normality_young_HP <- data.frame(matrix(ncol = 4, nrow = 0)) %>% `colnames<-`(c("statistic", "pvalue", "method", "variable"))
#LOOP: position error
normality_young_HP[1,] <- unlist(shapiro.test(young_HP_df$loop_pe_rad3_m)) #normal
normality_young_HP[2,] <- unlist(shapiro.test(young_HP_female_df$loop_pe_rad3_m)) #normal
normality_young_HP[3,] <- unlist(shapiro.test(young_HP_male_df$loop_pe_rad3_m)) #normal
#LOOP: position error average
normality_young_HP[4,] <-unlist(shapiro.test(young_HP_df$loop_pe_avg_m)) #normal
normality_young_HP[5,] <-unlist(shapiro.test(young_HP_female_df$loop_pe_avg_m)) #normal
normality_young_HP[6,] <-unlist(shapiro.test(young_HP_male_df$loop_pe_avg_m)) #normal
#LOOP: degrees traveled
normality_young_HP[7,] <-unlist(shapiro.test(young_HP_df$loop_de_rad3_degree))  #notnormal
normality_young_HP[8,] <-unlist(shapiro.test(young_HP_female_df$loop_de_rad3_degree))  #normal
normality_young_HP[9,] <-unlist(shapiro.test(young_HP_male_df$loop_de_rad3_degree) ) #notnormal
normality_young_HP[10,] <-unlist(shapiro.test(young_HP_df$loop_de_avg_degree))  #normal
normality_young_HP[11,] <-unlist(shapiro.test(young_HP_female_df$loop_de_avg_degree))  #normal
normality_young_HP[12,] <-unlist(shapiro.test(young_HP_male_df$loop_de_avg_degree))  #normal
#LOOP: angular error
normality_young_HP[13,] <-unlist(shapiro.test(young_HP_df$loop_ae_rad3_degree))  #normal
normality_young_HP[14,] <-unlist(shapiro.test(young_HP_female_df$loop_ae_rad3_degree))  #normal
normality_young_HP[15,] <-unlist(shapiro.test(young_HP_male_df$loop_ae_rad3_degree))  #normal
normality_young_HP[16,] <-unlist(shapiro.test(young_HP_df$loop_ae_avg_degree))  # notnormal
normality_young_HP[17,] <-unlist(shapiro.test(young_HP_female_df$loop_ae_avg_degree))  #notnormal
normality_young_HP[18,] <-unlist(shapiro.test(young_HP_male_df$loop_ae_avg_degree))  #no
normality_young_HP
View(normality_young_HP)
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_pe_avg_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_pe_rad3_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_ae_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_ae_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_ae_rad3_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Right-Hippocampus", y = "loop_pe_avg_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Right-Hippocampus", y = "loop_pe_rad3_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Right-Hippocampus", y = "loop_ae_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Right-Hippocampus", y = "loop_ae_rad3_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Right-Hippocampus", y = "loop_de_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Degrees Traveled at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Right-Hippocampus", y = "loop_de_rad3_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Degrees Traveled at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Left-Hippocampus", y = "loop_pe_avg_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Left-Hippocampus", y = "loop_pe_rad3_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Left-Hippocampus", y = "loop_pe_rad3_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Left-Hippocampus", y = "loop_ae_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Left-Hippocampus", y = "loop_ae_rad3_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Left-Hippocampus", y = "loop_ae_rad3_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Left-Hippocampus", y = "loop_de_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Degrees Traveled at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Left-Hippocampus", y = "loop_de_rad3_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Degrees Traveled at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
