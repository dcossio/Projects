if(!is.na(sum(midlife_CT_df_male_Avg[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = midlife_CT_df_male_Avg[["loop_ae_avg_degree"]], y = midlife_CT_df_male_Avg[[ROI]], z = midlife_CT_df_male_Avg[, c("age_spatial_years","EstimatedTotalIntraCranialVol")], method = "spearman")
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
# cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "fdr", n = length(cor_results$p.value))
# cor_results <- arrange(cor_results,p.value)
qvals <- qvalue::qvalue(cor_results$p.value)
cor_results$adj.pval <- qvals[["qvalues"]]
cor_results <- arrange(cor_results,p.value)
cor_results
View(cor_results)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(midlife_CT_df_male_rad3[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = midlife_CT_df_male_rad3[["loop_ae_rad3_degree"]], y = midlife_CT_df_male_rad3[[ROI]], z = midlife_CT_df_male_rad3[, c("age_spatial_years","EstimatedTotalIntraCranialVol")], method = "spearman")
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
# cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "fdr", n = length(cor_results$p.value))
# cor_results <- arrange(cor_results,p.value)
qvals <- qvalue::qvalue(cor_results$p.value)
cor_results$adj.pval <- qvals[["qvalues"]]
cor_results <- arrange(cor_results,p.value)
cor_results
View(cor_results)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(midlife_CT_df_female_Avg[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = midlife_CT_df_female_Avg[["loop_ae_avg_degree"]], y = midlife_CT_df_female_Avg[[ROI]], z = midlife_CT_df_female_Avg[, c("age_spatial_years","EstimatedTotalIntraCranialVol")], method = "spearman")
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
# cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "fdr", n = length(cor_results$p.value))
# cor_results <- arrange(cor_results,p.value)
qvals <- qvalue::qvalue(cor_results$p.value)
cor_results$adj.pval <- qvals[["qvalues"]]
cor_results <- arrange(cor_results,p.value)
cor_results
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in all_apriori) {
print(ROI)
if(!is.na(sum(midlife_CT_df_female_rad3[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = midlife_CT_df_female_rad3[["loop_ae_rad3_degree"]], y = midlife_CT_df_female_rad3[[ROI]], z = midlife_CT_df_female_rad3[, c("age_spatial_years","EstimatedTotalIntraCranialVol")], method = "spearman")
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
# cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "fdr", n = length(cor_results$p.value))
# cor_results <- arrange(cor_results,p.value)
qvals <- qvalue::qvalue(cor_results$p.value)
cor_results$adj.pval <- qvals[["qvalues"]]
cor_results <- arrange(cor_results,p.value)
cor_results
colnames(midlife_raw_df)
colnames(midlife_raw_df) %>%  grepl("17Networks")
schaefar_colnames <- colnames(midlife_raw_df)
schaefar_colnames <- schaefar_colnames[grep(pattern ="17Networks" )]
schaefar_colnames <- as.data.frame(colnames(midlife_raw_df))
View(schaefar_colnames)
schaefar_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("schaefar_rois")
schaefar_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("schaefar-rois")
schaefar_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("schaefar_rois") %>% filter(grepl("17Networks", schaefar_rois))
schaefar_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("schaefar_rois") %>% filter(grepl("17Networks", schaefar_rois)) %>% c()
View(schaefar_colnames)
schaefar_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("schaefar_rois") %>% filter(grepl("17Networks", schaefar_rois))
schaefar_colnames <- as.character(schaefar_colnames[,1])
schaefar_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("schaefar_rois") %>% filter(grepl("17Networks", schaefar_rois)) %>%  as.character(schaefar_colnames[,1])
schaefar_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("schaefar_rois") %>% filter(grepl("17Networks", schaefar_rois)) %>%  as.character(schaefar_colnames[])
schaefar_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("schaefar_rois") %>% filter(grepl("17Networks", schaefar_rois))
schaefar_colnames <- as.character(schaefar_colnames[,1])
colnames(midlife_raw_df)
x <- colnames(midlife_raw_df)
x <- grepl("17Networks",x)
schaefar_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("schaefar_rois") %>% filter(grepl("17Networks", schaefar_rois))
schaefar_colnames <- as.character(schaefar_colnames[,1])
temp_ct_df <- midlife_raw_df %>%  dplyr::select(schaefar_colnames)
View(temp_ct_df)
new_schaefar_colnames <- str_remove(schaefar_colnames,"17Networks_")
temp_ct_df <- temp_ct_df %>% `colnames<-`(new_schaefar_colnames)
View(temp_ct_df)
midlife_CT_df <- midlife_raw_df %>%  dplyr::select(
"subject_id",
"sex",
"age_spatial_years",
"repo_status",
"loop_pe_rad3_m",
"loop_pe_avg_m",
"loop_de_rad3_degree",
"loop_de_avg_degree",
"loop_ae_rad3_degree",
"loop_ae_avg_degree",
"EstimatedTotalIntraCranialVol")
midlife_CT_df <- cbind(midlife_CT_df,temp_ct_df)
View(midlife_CT_df)
View(midlife_CT_df)
View(midlife_raw_df)
freesurfer_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("freesurfer_rois") %>% filter(grepl("thickness", freesurfer_rois))
View(freesurfer_colnames)
freesurfer_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("freesurfer_rois") %>% filter(grepl("lh" | "rh", freesurfer_rois))
freesurfer_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("freesurfer_rois") %>% filter(grepl(c("lh", "rh"), freesurfer_rois))
View(freesurfer_colnames)
View(midlife_raw_df)
freesurfer_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("freesurfer_rois") %>% filter(grepl("thickness", freesurfer_rois))
freesurfer_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("freesurfer_rois") %>% filter(grepl("thickness", freesurfer_rois))
freesurfer_colnames <- as.character(freesurfer_colnames[,1])
freesurfer_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("freesurfer_rois") %>% filter(grepl("thickness", freesurfer_rois))
freesurfer_colnames <- as.character(freesurfer_colnames[,1])
# now creating a temp df to select just the data for schaefar
temp_ct_df <- midlife_raw_df %>%  dplyr::select(freesurfer_colnames)
# creating a new var with updated names removing the 17 netowrks
new_freesurfer_colnames <- str_remove(freesurfer_colnames,"_thickness")
# replacing cols
temp_ct_df <- temp_ct_df %>% `colnames<-`(new_freesurfer_colnames)
# adding to updated df
midlife_CT_df <- cbind(midlife_CT_df,temp_ct_df)
View(midlife_CT_df)
temp_ct_df <- midlife_raw_df %>%  dplyr::select( "Left-Caudate","Right-Caudate","Left-Putamen","Right-Putamen","Left-Hippocampus","Right-Hippocampus")
midlife_CT_df <- cbind(midlife_CT_df, temp_ct_df) %>% mutate(
avg_t1_hipp = (.$`Left-Hippocampus` + .$`Right-Hippocampus`) / 2,
avg_postcentral = lh_postcentral_thickness + rh_postcentral_thickness /
2,
avg_precentral = lh_precentral_thickness + rh_precentral_thickness / 2,
avg_superior_parietal = lh_superiorparietal_thickness + rh_superiorparietal_thickness / 2,
avg_superior_frontal = rh_superiorfrontal_thickness + lh_superiorfrontal_thickness / 2 , avg_caudate = `Left-Caudate` + `Right-Caudate` /2, avg_putamen = `Left-Putamen`,`Right-Putamen`
) %>% filter(EstimatedTotalIntraCranialVol != "NA")
temp_ct_df <- midlife_raw_df %>%  dplyr::select( "Left-Caudate","Right-Caudate","Left-Putamen","Right-Putamen","Left-Hippocampus","Right-Hippocampus")
#creating dataframe with all apriori regions
midlife_CT_df <- cbind(midlife_CT_df, temp_ct_df) %>% mutate(
avg_t1_hipp = (.$`Left-Hippocampus` + .$`Right-Hippocampus`) / 2,
avg_postcentral = lh_postcentral + rh_postcentral /
2,
avg_precentral = lh_precentral + rh_precentral / 2,
avg_superior_parietal = lh_superiorparietal + rh_superiorparietal / 2,
avg_superior_frontal = rh_superiorfrontal + lh_superiorfrontal / 2 , avg_caudate = `Left-Caudate` + `Right-Caudate` /2, avg_putamen = `Left-Putamen`,`Right-Putamen`
) %>% filter(EstimatedTotalIntraCranialVol != "NA")
#Scahefer Aprioris
#Scahefer Aprioris
schaefar_apriori_labelnames <-
c(
"LH_SomMotA",
"LH_SomMotB_Cent",
"LH_SomMotB_S2",
"LH_SomMotB_Ins",
"LH_SomMotB_Aud",
"LH_DorsAttnA_TempOcc",
"LH_DorsAttnA_ParOcc",
"LH_DorsAttnA_SPL",
"LH_DorsAttnB_PostC",
"LH_DorsAttnB_FEF",
"LH_DorsAttnB_PrCv",
"LH_ContA_Temp",
"LH_ContA_IPS",
"LH_ContA_PFCd",
"LH_ContA_PFCl",
"LH_ContA_PFClv",
"LH_ContA_Cingm",
"LH_ContC_pCun",
"LH_ContC_Cingp",
"LH_DefaultA_IPL",
"LH_DefaultA_PFCd",
"LH_DefaultA_pCunPCC",
"LH_DefaultA_PFCm",
"LH_DefaultC_IPL",
"LH_DefaultC_Rsp",
"LH_DefaultC_PHC",
"RH_SomMotA",
"RH_SomMotB_Cent",
"RH_SomMotB_S2",
"RH_SomMotB_Ins",
"RH_SomMotB_Aud",
"RH_DorsAttnA_TempOcc",
"RH_DorsAttnA_ParOcc",
"RH_DorsAttnA_SPL",
"RH_DorsAttnB_TempOcc",
"RH_DorsAttnB_PostC",
"RH_DorsAttnB_FEF",
"RH_ContA_Temp" ,
"RH_ContA_IPS",
"RH_ContA_PFCd",
"RH_ContA_PFCl",
"RH_ContA_Cingm",
"RH_ContC_pCun",
"RH_ContC_Cingp",
"RH_DefaultA_Temp",
"RH_DefaultA_IPL",
"RH_DefaultA_PFCd",
"RH_DefaultA_pCunPCC",
"RH_DefaultA_PFCm",
"RH_DefaultC_Rsp",
"RH_DefaultC_PHC"
)
schaefar_apriori_networknames <-
c(
"LH_SomMotA",
"LH_SomMotB",
"LH_DorsAttnA",
"LH_DorsAttnB",
"LH_ContA",
"LH_ContC",
"LH_DefaultA",
"LH_DefaultC",
"RH_SomMotA",
"RH_SomMotB",
"RH_DorsAttnA",
"RH_DorsAttnB",
"RH_ContA",
"RH_ContC",
"RH_DefaultA",
"RH_DefaultC"
)
# now there's a lot of columns to select here so I'm going to try and make a few list of them so then we can grab by names
# precentral, postcentral, superoir parietal, superior frontal, caudate and putamen
FS_all_apriori <- c("lh_postcentral","lh_precentral","lh_superiorparietal","lh_superiorfrontal", "lh_cuneus","lh_medialorbitofrontal","lh_entorhinal","lh_parahippocampal","lh_precuneus","lh_lateraloccipital","lh_posteriorcingulate", "rh_postcentral","rh_precentral","rh_superiorparietal","rh_superiorfrontal","rh_cuneus","rh_medialorbitofrontal","rh_entorhinal","rh_parahippocampal","rh_precuneus","rh_lateraloccipital","rh_posteriorcingulate","Left-Caudate","Right-Caudate","Left-Putamen","Right-Putamen","Left-Hippocampus","Right-Hippocampus")
FS_avg_apriori <- c("avg_t1_hipp","avg_postcentral", "avg_precentral",
"avg_superior_parietal", "avg_superior_frontal", "avg_caudate", "avg_putamen")
# Average
midlife_CT_df_Avg <- midlife_CT_df %>% filter(loop_de_avg_degree != "NA")
midlife_CT_df_Avg$sex[midlife_CT_df_Avg$sex=="Male"] <- 1
midlife_CT_df_Avg$sex[midlife_CT_df_Avg$sex=="Female"] <- 0
midlife_CT_df_Avg$sex <- as.numeric(midlife_CT_df_Avg$sex)
midlife_CT_df_male_Avg <- midlife_CT_df_Avg %>% filter(sex==1)
midlife_CT_df_female_Avg <-midlife_CT_df_Avg %>% filter(sex==0)
#Rad3
midlife_CT_df_rad3 <- midlife_CT_df %>% filter(loop_de_rad3_degree != "NA")
midlife_CT_df_rad3$sex[midlife_CT_df_rad3$sex=="Male"] <- 1
midlife_CT_df_rad3$sex[midlife_CT_df_rad3$sex=="Female"] <- 0
midlife_CT_df_rad3$sex <- as.numeric(midlife_CT_df_rad3$sex)
midlife_CT_df_male_rad3 <- midlife_CT_df_rad3 %>% filter(sex==1)
midlife_CT_df_female_rad3 <-midlife_CT_df_rad3 %>% filter(sex==0)
View(midlife_CT_df_male_Avg)
# first, let's create a dataframe with a fiew beh vars we'll need
midlife_CT_df <- midlife_raw_df %>%  dplyr::select(
"subject_id",
"sex",
"age_spatial_years",
"repo_status",
"loop_pe_rad3_m",
"loop_pe_avg_m",
"loop_de_rad3_degree",
"loop_de_avg_degree",
"loop_ae_rad3_degree",
"loop_ae_avg_degree",
"EstimatedTotalIntraCranialVol")
# now lets do some data wrangling to rename all of the schaefar columns by creating a variable with the master DF col names as rows, and then filtering by 17 networks. finally convert to a variable list of chars
schaefar_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("schaefar_rois") %>% filter(grepl("17Networks", schaefar_rois))
schaefar_colnames <- as.character(schaefar_colnames[,1])
# now creating a temp df to select just the data for schaefar
temp_ct_df <- midlife_raw_df %>%  dplyr::select(schaefar_colnames)
# creating a new var with updated names removing the 17 netowrks
new_schaefar_colnames <- str_remove(schaefar_colnames,"17Networks_")
# replacing cols
temp_ct_df <- temp_ct_df %>% `colnames<-`(new_schaefar_colnames)
# adding to updated df
midlife_CT_df <- cbind(midlife_CT_df,temp_ct_df)
# now let's work on the cortical thickness cleaning
freesurfer_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("freesurfer_rois") %>% filter(grepl("thickness", freesurfer_rois))
freesurfer_colnames <- as.character(freesurfer_colnames[,1])
# now creating a temp df to select just the data for schaefar
temp_ct_df <- midlife_raw_df %>%  dplyr::select(freesurfer_colnames)
# creating a new var with updated names removing the 17 netowrks
new_freesurfer_colnames <- str_remove(freesurfer_colnames,"_thickness")
# replacing cols
temp_ct_df <- temp_ct_df %>% `colnames<-`(new_freesurfer_colnames)
# adding to updated df
midlife_CT_df <- cbind(midlife_CT_df,temp_ct_df)
temp_ct_df <- midlife_raw_df %>%  dplyr::select( "Left-Caudate","Right-Caudate","Left-Putamen","Right-Putamen","Left-Hippocampus","Right-Hippocampus")
#creating dataframe with all apriori regions
midlife_CT_df <- cbind(midlife_CT_df, temp_ct_df) %>% mutate(
avg_t1_hipp = (.$`Left-Hippocampus` + .$`Right-Hippocampus`) / 2,
avg_postcentral = lh_postcentral + rh_postcentral /
2,
avg_precentral = lh_precentral + rh_precentral / 2,
avg_superior_parietal = lh_superiorparietal + rh_superiorparietal / 2,
avg_superior_frontal = rh_superiorfrontal + lh_superiorfrontal / 2 , avg_caudate = `Left-Caudate` + `Right-Caudate` /2, avg_putamen = `Left-Putamen`,`Right-Putamen`
) %>% filter(EstimatedTotalIntraCranialVol != "NA")
View(midlife_CT_df)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in schaefar_apriori_networknames) {
print(ROI)
if(!is.na(sum(midlife_CT_df_Avg[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = midlife_CT_df_Avg[["loop_de_avg_degree"]], y = midlife_CT_df_Avg[[ROI]], z = midlife_CT_df_Avg[, c("age_spatial_years","sex","EstimatedTotalIntraCranialVol")], method = "spearman")
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
# cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "fdr", n = length(cor_results$p.value))
# cor_results <- arrange(cor_results,p.value)
print(ROI)
pcorlist[[ROI]] <-
pcor.test(x = midlife_CT_df_Avg[["loop_de_avg_degree"]], y = midlife_CT_df_Avg[[ROI]], z = midlife_CT_df_Avg[, c("age_spatial_years","sex","EstimatedTotalIntraCranialVol")], method = "spearman")
# Average
midlife_CT_df_Avg <- midlife_CT_df %>% filter(loop_de_avg_degree != "NA")
midlife_CT_df_Avg$sex[midlife_CT_df_Avg$sex=="Male"] <- 1
midlife_CT_df_Avg$sex[midlife_CT_df_Avg$sex=="Female"] <- 0
midlife_CT_df_Avg$sex <- as.numeric(midlife_CT_df_Avg$sex)
midlife_CT_df_male_Avg <- midlife_CT_df_Avg %>% filter(sex==1)
midlife_CT_df_female_Avg <-midlife_CT_df_Avg %>% filter(sex==0)
#Rad3
midlife_CT_df_rad3 <- midlife_CT_df %>% filter(loop_de_rad3_degree != "NA")
midlife_CT_df_rad3$sex[midlife_CT_df_rad3$sex=="Male"] <- 1
midlife_CT_df_rad3$sex[midlife_CT_df_rad3$sex=="Female"] <- 0
midlife_CT_df_rad3$sex <- as.numeric(midlife_CT_df_rad3$sex)
midlife_CT_df_male_rad3 <- midlife_CT_df_rad3 %>% filter(sex==1)
midlife_CT_df_female_rad3 <-midlife_CT_df_rad3 %>% filter(sex==0)
View(midlife_CT_df)
View(midlife_CT_df_Avg)
midlife_CT_df <- cbind(midlife_CT_df, temp_ct_df) %>% mutate(
avg_t1_hipp = (.$`Left-Hippocampus` + .$`Right-Hippocampus`) / 2,
avg_postcentral = lh_postcentral + rh_postcentral /
2,
avg_precentral = lh_precentral + rh_precentral / 2,
avg_superior_parietal = lh_superiorparietal + rh_superiorparietal / 2,
avg_superior_frontal = rh_superiorfrontal + lh_superiorfrontal / 2 , avg_caudate = `Left-Caudate` + `Right-Caudate` /2, avg_putamen = `Left-Putamen`,`Right-Putamen`
) %>% filter(EstimatedTotalIntraCranialVol != "NA") %>% filter(LH_ContA_Cingm_1 != "NA")
# first, let's create a dataframe with a fiew beh vars we'll need
midlife_CT_df <- midlife_raw_df %>%  dplyr::select(
"subject_id",
"sex",
"age_spatial_years",
"repo_status",
"loop_pe_rad3_m",
"loop_pe_avg_m",
"loop_de_rad3_degree",
"loop_de_avg_degree",
"loop_ae_rad3_degree",
"loop_ae_avg_degree",
"EstimatedTotalIntraCranialVol")
# now lets do some data wrangling to rename all of the schaefar columns by creating a variable with the master DF col names as rows, and then filtering by 17 networks. finally convert to a variable list of chars
schaefar_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("schaefar_rois") %>% filter(grepl("17Networks", schaefar_rois))
schaefar_colnames <- as.character(schaefar_colnames[,1])
# now creating a temp df to select just the data for schaefar
temp_ct_df <- midlife_raw_df %>%  dplyr::select(schaefar_colnames)
# creating a new var with updated names removing the 17 netowrks
new_schaefar_colnames <- str_remove(schaefar_colnames,"17Networks_")
# replacing cols
temp_ct_df <- temp_ct_df %>% `colnames<-`(new_schaefar_colnames)
# adding to updated df
midlife_CT_df <- cbind(midlife_CT_df,temp_ct_df)
# now let's work on the cortical thickness cleaning
freesurfer_colnames <- as.data.frame(colnames(midlife_raw_df)) %>% `colnames<-`("freesurfer_rois") %>% filter(grepl("thickness", freesurfer_rois))
freesurfer_colnames <- as.character(freesurfer_colnames[,1])
# now creating a temp df to select just the data for schaefar
temp_ct_df <- midlife_raw_df %>%  dplyr::select(freesurfer_colnames)
# creating a new var with updated names removing the 17 netowrks
new_freesurfer_colnames <- str_remove(freesurfer_colnames,"_thickness")
# replacing cols
temp_ct_df <- temp_ct_df %>% `colnames<-`(new_freesurfer_colnames)
# adding to updated df
midlife_CT_df <- cbind(midlife_CT_df,temp_ct_df)
temp_ct_df <- midlife_raw_df %>%  dplyr::select( "Left-Caudate","Right-Caudate","Left-Putamen","Right-Putamen","Left-Hippocampus","Right-Hippocampus")
#creating dataframe with all apriori regions
midlife_CT_df <- cbind(midlife_CT_df, temp_ct_df) %>% mutate(
avg_t1_hipp = (.$`Left-Hippocampus` + .$`Right-Hippocampus`) / 2,
avg_postcentral = lh_postcentral + rh_postcentral /
2,
avg_precentral = lh_precentral + rh_precentral / 2,
avg_superior_parietal = lh_superiorparietal + rh_superiorparietal / 2,
avg_superior_frontal = rh_superiorfrontal + lh_superiorfrontal / 2 , avg_caudate = `Left-Caudate` + `Right-Caudate` /2, avg_putamen = `Left-Putamen`,`Right-Putamen`
) %>% filter(EstimatedTotalIntraCranialVol != "NA") %>% filter(LH_ContA_Cingm_1 != "NA")
# Average
midlife_CT_df_Avg <- midlife_CT_df %>% filter(loop_de_avg_degree != "NA")
midlife_CT_df_Avg$sex[midlife_CT_df_Avg$sex=="Male"] <- 1
midlife_CT_df_Avg$sex[midlife_CT_df_Avg$sex=="Female"] <- 0
midlife_CT_df_Avg$sex <- as.numeric(midlife_CT_df_Avg$sex)
midlife_CT_df_male_Avg <- midlife_CT_df_Avg %>% filter(sex==1)
midlife_CT_df_female_Avg <-midlife_CT_df_Avg %>% filter(sex==0)
#Rad3
midlife_CT_df_rad3 <- midlife_CT_df %>% filter(loop_de_rad3_degree != "NA")
midlife_CT_df_rad3$sex[midlife_CT_df_rad3$sex=="Male"] <- 1
midlife_CT_df_rad3$sex[midlife_CT_df_rad3$sex=="Female"] <- 0
midlife_CT_df_rad3$sex <- as.numeric(midlife_CT_df_rad3$sex)
midlife_CT_df_male_rad3 <- midlife_CT_df_rad3 %>% filter(sex==1)
midlife_CT_df_female_rad3 <-midlife_CT_df_rad3 %>% filter(sex==0)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist[[ROI]] <-
pcor.test(x = midlife_CT_df_Avg[["loop_de_avg_degree"]], y = midlife_CT_df_Avg[[ROI]], z = midlife_CT_df_Avg[, c("age_spatial_years","sex","EstimatedTotalIntraCranialVol")], method = "spearman")
midlife_CT_df_Avg[["loop_de_avg_degree"]]
midlife_CT_df_Avg[[ROI]]
for (label in schaefar_colnames) {
temp <-
DF %>% select(matches(label)) %>% rowMeans() %>% as.data.frame() %>% `colnames<-`(label)
dataframe <- cbind(dataframe, temp)
}
temp <-
midlife_raw_df %>% select(matches(label))
temp <-
midlife_raw_df %>% dplyr::select(matches(label))
View(temp)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in schaefar_apriori_networknames) {
print(ROI)
if(!is.na(sum(midlife_CT_df_Avg[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = midlife_CT_df_Avg[["loop_de_avg_degree"]], y = midlife_CT_df_Avg[[ROI]], z = midlife_CT_df_Avg[, c("age_spatial_years","sex","EstimatedTotalIntraCranialVol")], method = "spearman")
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
# cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "fdr", n = length(cor_results$p.value))
# cor_results <- arrange(cor_results,p.value)
pcor.test(x = midlife_CT_df_Avg[["loop_de_avg_degree"]], y = midlife_CT_df_Avg[[ROI]], z = midlife_CT_df_Avg[, c("age_spatial_years","sex","EstimatedTotalIntraCranialVol")], method = "spearman")
midlife_schaefar_df <- midlife_CT_df
for (label in schaefar_apriori_labelnames) {
midlife_schaefar_df <-
midlife_CT_df %>% dplyr::select(matches(label)) %>% rowMeans() %>% as.data.frame() %>% `colnames<-`(label)
}
View(midlife_schaefar_df)
midlife_schaefar_df <- midlife_CT_df  %>%  dplyr::select(
"subject_id",
"sex",
"age_spatial_years",
"repo_status",
"loop_pe_rad3_m",
"loop_pe_avg_m",
"loop_de_rad3_degree",
"loop_de_avg_degree",
"loop_ae_rad3_degree",
"loop_ae_avg_degree",
"EstimatedTotalIntraCranialVol")
for (label in schaefar_apriori_labelnames) {
temp <-
midlife_CT_df %>% dplyr::select(matches(label)) %>% rowMeans() %>% as.data.frame() %>% `colnames<-`(label)
midlife_schaefar_df <- cbind(midlife_schaefar_df, temp)
}
View(midlife_schaefar_df)
View(temp)
midlife_CT_df %>% dplyr::select(matches(label))
# Average
midlife_CT_df_Avg <- midlife_schaefar_df %>% filter(loop_de_avg_degree != "NA")
midlife_CT_df_Avg$sex[midlife_CT_df_Avg$sex=="Male"] <- 1
midlife_CT_df_Avg$sex[midlife_CT_df_Avg$sex=="Female"] <- 0
midlife_CT_df_Avg$sex <- as.numeric(midlife_CT_df_Avg$sex)
midlife_CT_df_male_Avg <- midlife_CT_df_Avg %>% filter(sex==1)
midlife_CT_df_female_Avg <-midlife_CT_df_Avg %>% filter(sex==0)
#Rad3
midlife_CT_df_rad3 <- midlife_schaefar_df %>% filter(loop_de_rad3_degree != "NA")
midlife_CT_df_rad3$sex[midlife_CT_df_rad3$sex=="Male"] <- 1
midlife_CT_df_rad3$sex[midlife_CT_df_rad3$sex=="Female"] <- 0
midlife_CT_df_rad3$sex <- as.numeric(midlife_CT_df_rad3$sex)
midlife_CT_df_male_rad3 <- midlife_CT_df_rad3 %>% filter(sex==1)
midlife_CT_df_female_rad3 <-midlife_CT_df_rad3 %>% filter(sex==0)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in schaefar_apriori_networknames) {
print(ROI)
if(!is.na(sum(midlife_CT_df_Avg[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = midlife_CT_df_Avg[["loop_de_avg_degree"]], y = midlife_CT_df_Avg[[ROI]], z = midlife_CT_df_Avg[, c("age_spatial_years","sex","EstimatedTotalIntraCranialVol")], method = "spearman")
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
# cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "fdr", n = length(cor_results$p.value))
# cor_results <- arrange(cor_results,p.value)
View(cor_results)
cor_results <-
data.frame(matrix(nrow = 0, ncol = 7)) %>%   `colnames<-`(c("roi", "estimate", "p.value", "statistic", "n", "gp", "Method"))
pcorlist <- list()
for (ROI in schaefar_apriori_labelnames) {
print(ROI)
if(!is.na(sum(midlife_CT_df_Avg[[ROI]])) == FALSE){
pcorlist[[ROI]] <- NA
}else{
pcorlist[[ROI]] <-
pcor.test(x = midlife_CT_df_Avg[["loop_de_avg_degree"]], y = midlife_CT_df_Avg[[ROI]], z = midlife_CT_df_Avg[, c("age_spatial_years","sex","EstimatedTotalIntraCranialVol")], method = "spearman")
temp <- cbind(ROI, pcorlist[[ROI]])
cor_results <- rbind(cor_results, temp)
}
}
# cor_results$adj.pval <- p.adjust(cor_results$p.value, method = "fdr", n = length(cor_results$p.value))
# cor_results <- arrange(cor_results,p.value)
View(cor_results)
