geom_hline(aes(yintercept = 360, colour="gray" )) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(aes(yintercept = 350, colour= "#7d4c5a" )) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(yintercept=360, linetype="dashed", color = "red") +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(yintercept=360, linetype="dashed", color = "red", size=2) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(yintercept=360, linetype="dashed", color = "gray", size=2) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(aes(yintercept=360), linetype="dashed", color = "gray", size=2) +
theme(legend.position = "top", legend.title=element_blank())
class(midlife_HP_df_adj$avg_t2_total_hipp)
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_abline(intercept=360,slope = 0 linetype="dashed", color = "gray", size=2) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_abline(intercept=360,slope = 0, linetype="dashed", color = "gray", size=2) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_abline(intercept=360,slope = 0, linetype="dashed", color = "gray", size=1) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_abline(intercept=400,slope = 0, linetype="dashed", color = "gray", size=1) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_abline(intercept=360,slope = 0, linetype="dashed", color = "gray", size=1) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(yintercept=360, linetype="dashed", color = "#414143", size=1) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71", size=4), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(yintercept=360, linetype="dashed", color = "#414143", size=1) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",  size=2,
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(yintercept=360, linetype="dashed", color = "#414143", size=1) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",  size=3,
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(yintercept=360, linetype="dashed", color = "#414143", size=1) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "avg_t2_total_hipp", y = "loop_de_avg_degree",  size=4,
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(yintercept=360, linetype="dashed", color = "#414143", size=1) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "t2hipp_vol_avg_ca1", y = "loop_de_avg_degree", size=4,
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(yintercept=360, linetype="dashed", color = "#414143", size=1) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "t2hipp_vol_avg_ca23", y = "loop_de_avg_degree",size=4,
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(yintercept=360, linetype="dashed", color = "#414143", size=1)+
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "t2hipp_vol_avg_dg", y = "loop_de_rad3_degree",size=4,
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
ca23_DEavg +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "t2hipp_vol_avg_ca23", y = "loop_de_avg_degree",size=4,
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(yintercept=360, linetype="dashed", color = "#414143", size=1)+
theme(legend.position = "top", legend.title=element_blank())
ggscatter(midlife_HP_df_adj, x = "t2hipp_vol_avg_ca23", y = "loop_de_avg_degree",size=4,
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(yintercept=360, linetype="dashed", color = "#414143", size=1)+
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "t2hipp_vol_avg_dg", y = "loop_de_avg_degree",
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "t2hipp_vol_avg_dg", y = "loop_de_avg_degree", size=4,
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(yintercept=360, linetype="dashed", color = "#414143", size=1) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(midlife_HP_df_adj, x = "t2hipp_vol_avg_sub", y = "loop_de_avg_degree",size = 4,
add = "reg.line", color = "#7d4c5a",
add.params = list(color = "#7d4c5a", fill = "#806d71"), # Customize reg. line
#cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
#cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "degrees traveled  at average (m)", ) +
geom_hline(yintercept=360, linetype="dashed", color = "#414143", size=1) +
theme(legend.position = "top", legend.title=element_blank())
young_HP_correlations <- data.frame(matrix(ncol=9, nrow=0))
# Let's create a clean df to work with here and include only the columns we want
young_HP_df <-
young_raw_df %>%  dplyr::select(
"subject_id",
"sex",
"age_spatial_years",
"loop_pe_rad3_m",
"loop_pe_avg_m",
"loop_de_rad3_degree",
"loop_de_avg_degree",
"loop_ae_rad3_degree",
"loop_ae_avg_degree",
"Left-Hippocampus",
"Right-Hippocampus",
"eTIV",
"VaisTIV_VBM"
) %>% mutate(avg_t1_hipp = (.$`Left-Hippocampus` + .$`Right-Hippocampus`) /
2) %>% filter(!is.na(eTIV)) # Need to make sure we remove subj without scan # N=43
young_HP_female_df <- young_HP_df %>% filter(sex=="Female")
young_HP_male_df <- young_HP_df %>%  filter(sex== "Male")
#v contains adjusted hip
# now we create the function for adjusting by TIV
# 1 Create function for apply to variables
Young_dividebyTIV <- function(x, na.rm = FALSE) (x/young_HP_df_adj$eTIV)
# 2 Let's correct by mutating the columns using the TIV from freesurfer
young_HP_df_adj <- young_HP_df_adj %>% mutate_at(vars(avg_t1_hipp, `Left-Hippocampus`, `Right-Hippocampus`),
Young_dividebyTIV) %>%
# multiplying to get proportions
mutate(avg_t1_hipp = avg_t1_hipp*1000,
`Left-Hippocampus` = `Left-Hippocampus`*1000,
`Right-Hippocampus` = `Right-Hippocampus`*1000)
# Let's create a clean df to work with here and include only the columns we want
young_HP_df <-
young_raw_df %>%  dplyr::select(
"subject_id",
"sex",
"age_spatial_years",
"loop_pe_rad3_m",
"loop_pe_avg_m",
"loop_de_rad3_degree",
"loop_de_avg_degree",
"loop_ae_rad3_degree",
"loop_ae_avg_degree",
"Left-Hippocampus",
"Right-Hippocampus",
"eTIV",
"VaisTIV_VBM"
) %>% mutate(avg_t1_hipp = (.$`Left-Hippocampus` + .$`Right-Hippocampus`) /
2) %>% filter(!is.na(eTIV)) # Need to make sure we remove subj without scan # N=43
young_HP_female_df <- young_HP_df %>% filter(sex=="Female")
young_HP_male_df <- young_HP_df %>%  filter(sex== "Male")
young_HP_correlations <- data.frame(matrix(ncol=9, nrow=0))
# Let's create a clean df to work with here and include only the columns we want
young_HP_df <-
young_raw_df %>%  dplyr::select(
"subject_id",
"sex",
"age_spatial_years",
"loop_pe_rad3_m",
"loop_pe_avg_m",
"loop_de_rad3_degree",
"loop_de_avg_degree",
"loop_ae_rad3_degree",
"loop_ae_avg_degree",
"Left-Hippocampus",
"Right-Hippocampus",
"eTIV",
"VaisTIV_VBM"
) %>% mutate(avg_t1_hipp = (.$`Left-Hippocampus` + .$`Right-Hippocampus`) /
2) %>% filter(!is.na(eTIV)) # Need to make sure we remove subj without scan # N=43
young_HP_female_df <- young_HP_df %>% filter(sex=="Female")
young_HP_male_df <- young_HP_df %>%  filter(sex== "Male")
# Let's create a clean df to work with here and include only the columns we want
young_HP_df <-
young_raw_df %>%  dplyr::select(
"subject_id",
"sex",
"age_spatial_years",
"loop_pe_rad3_m",
"loop_pe_avg_m",
"loop_de_rad3_degree",
"loop_de_avg_degree",
"loop_ae_rad3_degree",
"loop_ae_avg_degree",
"Left-Hippocampus",
"Right-Hippocampus",
"eTIV",
"VaisTIV_VBM"
) %>% mutate(avg_t1_hipp = (.$`Left-Hippocampus` + .$`Right-Hippocampus`) /
2) %>% filter(!is.na(eTIV)) # Need to make sure we remove subj without scan # N=43
young_HP_female_df <- young_HP_df %>% filter(sex=="Female")
young_HP_male_df <- young_HP_df %>%  filter(sex== "Male")
#v contains adjusted hip
# now we create the function for adjusting by TIV
# 1 Create function for apply to variables
Young_dividebyTIV <- function(x, na.rm = FALSE) (x/young_HP_df_adj$eTIV)
# 2 Let's correct by mutating the columns using the TIV from freesurfer
young_HP_df_adj <- young_HP_df_adj %>% mutate_at(vars(avg_t1_hipp, `Left-Hippocampus`, `Right-Hippocampus`),
Young_dividebyTIV) %>%
# multiplying to get proportions
mutate(avg_t1_hipp = avg_t1_hipp*1000,
`Left-Hippocampus` = `Left-Hippocampus`*1000,
`Right-Hippocampus` = `Right-Hippocampus`*1000)
young_HP_df_adj <- young_HP_df_adj %>% mutate_at(vars(avg_t1_hipp, `Left-Hippocampus`, `Right-Hippocampus`),
Young_dividebyTIV)
#v contains adjusted hip
# now we create the function for adjusting by TIV
# 1 Create function for apply to variables
Young_dividebyTIV <- function(x, na.rm = FALSE) (x/young_HP_df_adj$eTIV)
# 2 Let's correct by mutating the columns using the TIV from freesurfer
young_HP_df_adj <- young_HP_df %>% mutate_at(vars(avg_t1_hipp, `Left-Hippocampus`, `Right-Hippocampus`),
Young_dividebyTIV) %>%
# multiplying to get proportions
mutate(avg_t1_hipp = avg_t1_hipp*1000,
`Left-Hippocampus` = `Left-Hippocampus`*1000,
`Right-Hippocampus` = `Right-Hippocampus`*1000)
young_HP_df_adj <- young_HP_df %>% mutate_at(vars(avg_t1_hipp, `Left-Hippocampus`, `Right-Hippocampus`),
Young_dividebyTIV)
#v contains adjusted hip
# now we create the function for adjusting by TIV
# 1 Create function for apply to variables
Young_dividebyTIV <- function(x, na.rm = FALSE) (x/young_HP_df$eTIV)
# 2 Let's correct by mutating the columns using the TIV from freesurfer
young_HP_df_adj <- young_HP_df %>% mutate_at(vars(avg_t1_hipp, `Left-Hippocampus`, `Right-Hippocampus`),
Young_dividebyTIV) %>%
# multiplying to get proportions
mutate(avg_t1_hipp = avg_t1_hipp*1000,
`Left-Hippocampus` = `Left-Hippocampus`*1000,
`Right-Hippocampus` = `Right-Hippocampus`*1000)
temp_yng_cor <- broom::tidy(cor.test(young_HP_df_adj$avg_t1_hipp,young_HP_df_adj$loop_pe_avg_m, method = "spearman")) %>% mutate(analysis = "Avg_PE_T1total" )  %>% mutate(parameter = "NA", conf.low= "NA", conf.high= "NA")
temp_yng_cor <- temp_yng_cor[,c(1,2,3,7,8,9,4,5,6)]
young_HP_correlations <- rbind(young_HP_correlations,temp_yng_cor)
temp_yng_cor
temp_yng_cor
cor.test(young_HP_df_adj$avg_t1_hipp,young_HP_df_adj$loop_pe_avg_m, method = "spearman")
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_pe_avg_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
nrow(young_HP_df_adj$avg_t1_hipp)
young_HP_df_adj$avg_t1_hipp
View(young_HP_correlations)
temp_yng_cor <- broom::tidy(cor.test(young_HP_df_adj$avg_t1_hipp,young_HP_df_adj$loop_pe_rad3_m, method = "spearman")) %>% mutate(analysis = "rad3_PE_T1total" )  %>% mutate(parameter = "NA", conf.low= "NA", conf.high= "NA")
temp_yng_cor <- temp_yng_cor[,c(1,2,3,7,8,9,4,5,6)]
young_HP_correlations <- rbind(young_HP_correlations,temp_yng_cor)
temp_yng_cor
View(young_HP_df_adj)
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_de_rad3_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Degrees Traveled at aver3.0  (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "Right-Hippocampus", y = "loop_pe_avg_m",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Position Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
temp_yng_cor <- broom::tidy(cor.test(young_HP_df_adj$avg_t1_hipp,young_HP_df_adj$loop_de_avg_degree)) %>% mutate(analysis = "Avg_DT_T1total" )
young_HP_correlations <- rbind(young_HP_correlations,temp_yng_cor)
temp_yng_cor
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_de_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "pearson",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Degrees Traveled at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
cor.test(young_HP_df_adj$avg_t1_hipp,young_HP_df_adj$loop_de_avg_degree)
View(young_HP_correlations)
View(young_HP_df_adj)
temp_yng_cor <- broom::tidy(cor.test(young_HP_df_adj$avg_t1_hipp,young_HP_df_adj$loop_ae_avg_degree, method = "spearman")) %>% mutate(analysis = "Avg_AE_T1total" )  %>% mutate(parameter = "NA", conf.low= "NA", conf.high= "NA")
temp_yng_cor <- temp_yng_cor[,c(1,2,3,7,8,9,4,5,6)]
young_HP_correlations <- rbind(young_HP_correlations,temp_yng_cor)
temp_yng_cor
# Use hp data frame adjusted
ggscatter(young_HP_df_adj, x = "avg_t1_hipp", y = "loop_ae_avg_degree",
add = "reg.line",
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
conf.int = TRUE,
cor.method = "spearman",
cor.coeff.args = list(label.sep = "\n"),
xlab = "Averaged GMV Volume", ylab = "Angular Error at average (m)", ) +
theme(legend.position = "top", legend.title=element_blank())
View(LOOP_raw_df)
LOOP_raw_df <- read_csv(paste0(workingdir,"/LOOP_all_data.csv")) %>%  filter(loop_useable=="Yes")
View(LOOP_raw_df)
ALL_loop_summarystats <- LOOP_raw_df  %>%
group_by(age_group) %>%
summarize(n_subject = n(),
age_mean = mean(age_spatial_years),
age_Sd = sd(age_spatial_years),
AE_rad3 = mean(loop_ae_rad3_degree,na.rm=TRUE),
AE_avg = mean(loop_ae_avg_degree ,na.rm=TRUE),
PE_rad3 = mean(loop_pe_rad3_m,na.rm=TRUE),
PE_avg = mean(loop_pe_avg_m,na.rm=TRUE),
DT_rad3 = mean(loop_de_rad3_degree,na.rm=TRUE),
DT_avg = mean(loop_de_avg_degree,na.rm=TRUE)) %>% as.data.frame()
View(ALL_loop_summarystats)
ggboxplot(LOOP_raw_df, x = "age_group", y = "loop_de_avg_degree", color = "supp",
palette = c("#00AFBB", "#E7B800"))
ggboxplot(LOOP_raw_df, x = "age_group", y = "loop_de_avg_degree", color = "supp",
palette = c("#00AFBB", "#E7B800"))
ggboxplot(LOOP_raw_df, x = "age_group", y = "loop_de_avg_degree", color = "sex",
palette = c("#00AFBB", "#E7B800"))
DT_aov <- aov(loop_de_avg_degree ~ age_group + sex, data =LOOP_raw_df )
DT_aov <- aov(loop_de_avg_degree ~ age_group + sex, data =LOOP_raw_df )
summary(DT_aov)
knitr::kable(loop_summarystats) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>% scroll_box(width = "800px", height = "200")
knitr::kable(ALL_loop_summarystats) %>% kable_styling(bootstrap_options =  c("striped", "hover", "condensed")) %>% scroll_box(width = "800px", height = "200")
DT_aov <- aov(loop_de_avg_degree ~ age_group + sex, data =LOOP_raw_df )
summary(DT_aov)
library(ggplot2)
library(tidyverse)
library(stringr)
library(kableExtra)
# library(tidygraph)
# library(plotly)
#library(factoextra)
#library(lsr)
library(ggpubr)
library(knitr)
library(janitor)
library(car)
library(ggiraph)
library(ggiraphExtra)
library(moonBook)
library(gridExtra)
library(markdown)
library(psych)
library(ppcor)
AE_aov <- aov(loop_ae_avg_degree ~ age_group + sex, data =LOOP_raw_df )
summary(AE_aov)
AE_aov <- aov(loop_ae_avg_degree ~ age_group + sex, data =LOOP_raw_df )
summary(AE_aov)
LOOP_raw_df$loop_ae_avg_degree
AE_aov <- aov(loop_ae_avg_degree ~ age_group + sex, data =LOOP_raw_df )
summary(AE_aov)
