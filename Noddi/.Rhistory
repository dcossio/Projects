temp_gm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
temp_wm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
# CNeed to go ahead and create new column names for these databses and then combine them as well. Let's go back to ROI numbers
for (col in 1:num_cols) {
print(col)
# Splitting up the column names for each csv
colname_split_L_gm <-
colnames(ModelROIs_L_ICVF_gm[, col]) %>%  str_split(" ")
colname_split_R_gm <-
colnames(ModelROIs_R_ICVF_gm[, col]) %>%  str_split(" ")
colname_split_L_wm <-
colnames(ModelROIs_L_ICVF_wm[, col]) %>%  str_split(" ")
colname_split_R_wm <-
colnames(ModelROIs_R_ICVF_wm[, col]) %>%  str_split(" ")
# Replacing the column names for each CSV
colnames(ModelROIs_L_ICVF_gm)[col] <-
paste0("ModelROIs_", colname_split_L_gm[[1]][1], "_", left_labels[col])
colnames(ModelROIs_R_ICVF_gm)[col] <-
paste0("ModelROIs_", colname_split_R_gm[[1]][1], "_", right_labels[col])
colnames(ModelROIs_L_ICVF_wm)[col] <-
paste0("ModelROIs_", colname_split_L_wm[[1]][1], "_", left_labels[col])
colnames(ModelROIs_R_ICVF_wm)[col] <-
paste0("ModelROIs_", colname_split_R_wm[[1]][1], "_", right_labels[col])
# Let's combine the columns now and also reorder
ModelROIs_ICVF_gm <-
cbind(ModelROIs_L_ICVF_gm, ModelROIs_R_ICVF_gm)
ModelROIs_ICVF_wm <-
cbind(ModelROIs_L_ICVF_wm, ModelROIs_R_ICVF_wm)
}
# LEt's reorganize the columns so things are in order
newColOrder <-
c(
"ModelROIs_hippocampus_whole_1",
"ModelROIs_hippocampus_whole_2",
"ModelROIs_temproal-polar_PRC_5",
"ModelROIs_temproal-polar_PRC_6",
"ModelROIs_PRC_7",
"ModelROIs_PRC_8" ,
"ModelROIs_ERC_9",
"ModelROIs_ERC_10",
"ModelROIs_PHC_11",
"ModelROIs_PHC_12",
"ModelROIs_DG_CA3_13",
"ModelROIs_DG_CA3_14",
"ModelROIs_CA1_15",
"ModelROIs_CA1_16",
"ModelROIs_Subiculum_17",
"ModelROIs_Subiculum_18"
)
ModelROIs_ICVF_gm_reorganized <- ModelROIs_ICVF_gm[, newColOrder]
ModelROIs_ICVF_wm_reorganized <- ModelROIs_ICVF_wm[, newColOrder]
num_cols <- ncol(ModelROIs_ICVF_gm_reorganized)
num_rows <- nrow(ModelROIs_ICVF_gm_reorganized)
for (col in 1:num_cols) {
print(col)
# LEt's go back into that loop and fix our voxels
# Let's do some cleaning of the  voxel info
raw_value_gm <-
as.character(unlist(ModelROIs_ICVF_gm_reorganized[, col])) #GM
raw_value_wm <-
as.character(unlist(ModelROIs_ICVF_wm_reorganized[, col])) #WM
raw_value_gm_split <- str_split(raw_value_gm, " ")
raw_value_wm_split <- str_split(raw_value_wm, " ")
for (row in 1:num_rows) {
ModelROIs_ICVF_gm_reorganized[row, col] <-
raw_value_gm_split[[row]][1]
ModelROIs_ICVF_wm_reorganized[row, col] <-
raw_value_wm_split[[row]][1]
}
temp_gm$Brain_Area <- colnames(ModelROIs_ICVF_gm_reorganized[col])
temp_gm$Value <- ModelROIs_ICVF_gm_reorganized[, col]
temp_gm$Metric <- "ICVF"
temp_gm$Tissue <- "gm"
temp_gm$SubjectID <- sub_info$SubjectID
temp_gm$Age <- sub_info$Age
temp_gm$Score <- sub_info$Score
temp_gm$Gender <- sub_info$Gender
#now white matter
temp_wm$Brain_Area <- colnames(ModelROIs_ICVF_wm_reorganized[col])
temp_wm$Value <- ModelROIs_ICVF_wm_reorganized[, col]
temp_wm$Metric <- "ICVF"
temp_wm$Tissue <- "wm"
temp_wm$SubjectID <- sub_info$SubjectID
temp_wm$Age <- sub_info$Age
temp_wm$Score <- sub_info$Score
temp_wm$Gender <- sub_info$Gender
# Let's bind everything together
ModelROIs_ICVF_gm_CLEANED <- rbind(ModelROIs_ICVF_gm_CLEANED,temp_gm)
ModelROIs_ICVF_wm_CLEANED <- rbind(ModelROIs_ICVF_wm_CLEANED,temp_wm)
}
#Small cleaning things
ModelROIs_ICVF_gm_CLEANED$Value <- as.numeric(unlist(ModelROIs_ICVF_gm_CLEANED$Value)) #make sure this is numeric
ModelROIs_ICVF_gm_CLEANED <- ModelROIs_ICVF_gm_CLEANED %>% arrange(Brain_Area)
##WM
ModelROIs_ICVF_wm_CLEANED$Value <- as.numeric(unlist(ModelROIs_ICVF_wm_CLEANED$Value)) #make sure this is numeric
ModelROIs_ICVF_wm_CLEANED <- ModelROIs_ICVF_wm_CLEANED %>% arrange(Brain_Area)
ModelROIs_ICVF_allNODDI <- rbind(ModelROIs_ICVF_wm_CLEANED,ModelROIs_ICVF_gm_CLEANED)
# Export
write.csv(ModelROIs_ICVF_allNODDI,paste0(main_dir,"/Data/modelROIs/Clean/ModelROIs_ICVF_NODDI.csv"), row.names = FALSE)
# LEt's get all of our labels and vars ready. I know i mispelled temporal but i'm dumb and mispelled it during the extraction so i'm leaving it here like this for now.
label_names <- c("hippocampus_whole","temproal-polar_PRC","PRC","ERC","PHC","DG_CA3","CA1","Subiculum")
# These are the labels i had when extracting but using the reordered ones above ot match the order of the columns bc i'm too lazy to reorder the actual columns
# left_labels <- c(1,5,7,9,11,13,15,17)
# right_labels <- c(2,6,8,10,12,14,16,18)
# MODEL ROIS LABELS
# Hippocampus whole : 1 and 2
# Temporal-polar_PRC : 5 and 6
# PRC : 7 and 8
# ERC : 9 snd 10
# PHC : 11 and 12
# DG_CA3: 13 and 14
# CA1 : 15 and 16
# Subiculum 17 and 18
# First thing is to read in our first CSV. WE need to also make sure the columns are rordered
ModelROIs_L_OD_gm <- read_csv(paste0(main_dir,"Data/modelROIs/Raw/all_L_OD_gmNODDI.csv"))
ModelROIs_R_OD_gm <- read_csv(paste0(main_dir,"Data/modelROIs/Raw/all_R_OD_gmNODDI.csv"))
ModelROIs_R_OD_wm <- read_csv(paste0(main_dir,"Data/modelROIs/Raw/all_R_OD_wmNODDI.csv"))
ModelROIs_L_OD_wm <- read_csv(paste0(main_dir,"Data/modelROIs/Raw/all_L_OD_wmNODDI.csv"))
# LEt's set our  labels based on the order the columns are being read in
left_labels <- c(15,13,9,1,11,7,17,5)
right_labels <- c(16,14,10,2,12,8,18,6)
#Getting number of columns
num_cols <- ncol(ModelROIs_R_OD_wm)
num_rows <- nrow(ModelROIs_L_OD_wm)
ModelROIs_OD_gm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
ModelROIs_OD_wm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
temp_gm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
temp_wm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
# CNeed to go ahead and create new column names for these databses and then combine them as well. Let's go back to ROI numbers
for (col in 1:num_cols) {
print(col)
# Splitting up the column names for each csv
colname_split_L_gm <-
colnames(ModelROIs_L_OD_gm[, col]) %>%  str_split(" ")
colname_split_R_gm <-
colnames(ModelROIs_R_OD_gm[, col]) %>%  str_split(" ")
colname_split_L_wm <-
colnames(ModelROIs_L_OD_wm[, col]) %>%  str_split(" ")
colname_split_R_wm <-
colnames(ModelROIs_R_OD_wm[, col]) %>%  str_split(" ")
# Replacing the column names for each CSV
colnames(ModelROIs_L_OD_gm)[col] <-
paste0("ModelROIs_", colname_split_L_gm[[1]][1], "_", left_labels[col])
colnames(ModelROIs_R_OD_gm)[col] <-
paste0("ModelROIs_", colname_split_R_gm[[1]][1], "_", right_labels[col])
colnames(ModelROIs_L_OD_wm)[col] <-
paste0("ModelROIs_", colname_split_L_wm[[1]][1], "_", left_labels[col])
colnames(ModelROIs_R_OD_wm)[col] <-
paste0("ModelROIs_", colname_split_R_wm[[1]][1], "_", right_labels[col])
# Let's combine the columns now and also reorder
ModelROIs_OD_gm <-
cbind(ModelROIs_L_OD_gm, ModelROIs_R_OD_gm)
ModelROIs_OD_wm <-
cbind(ModelROIs_L_OD_wm, ModelROIs_R_OD_wm)
}
# LEt's reorganize the columns so things are in order
newColOrder <-
c(
"ModelROIs_hippocampus_whole_1",
"ModelROIs_hippocampus_whole_2",
"ModelROIs_temproal-polar_PRC_5",
"ModelROIs_temproal-polar_PRC_6",
"ModelROIs_PRC_7",
"ModelROIs_PRC_8" ,
"ModelROIs_ERC_9",
"ModelROIs_ERC_10",
"ModelROIs_PHC_11",
"ModelROIs_PHC_12",
"ModelROIs_DG_CA3_13",
"ModelROIs_DG_CA3_14",
"ModelROIs_CA1_15",
"ModelROIs_CA1_16",
"ModelROIs_Subiculum_17",
"ModelROIs_Subiculum_18"
)
ModelROIs_OD_gm_reorganized <- ModelROIs_OD_gm[, newColOrder]
ModelROIs_OD_wm_reorganized <- ModelROIs_OD_wm[, newColOrder]
num_cols <- ncol(ModelROIs_OD_gm_reorganized)
num_rows <- nrow(ModelROIs_OD_gm_reorganized)
for (col in 1:num_cols) {
print(col)
# LEt's go back into that loop and fix our voxels
# Let's do some cleaning of the  voxel info
raw_value_gm <-
as.character(unlist(ModelROIs_OD_gm_reorganized[, col])) #GM
raw_value_wm <-
as.character(unlist(ModelROIs_OD_wm_reorganized[, col])) #WM
raw_value_gm_split <- str_split(raw_value_gm, " ")
raw_value_wm_split <- str_split(raw_value_wm, " ")
for (row in 1:num_rows) {
ModelROIs_OD_gm_reorganized[row, col] <-
raw_value_gm_split[[row]][1]
ModelROIs_OD_wm_reorganized[row, col] <-
raw_value_wm_split[[row]][1]
}
temp_gm$Brain_Area <- colnames(ModelROIs_OD_gm_reorganized[col])
temp_gm$Value <- ModelROIs_OD_gm_reorganized[, col]
temp_gm$Metric <- "OD"
temp_gm$Tissue <- "gm"
temp_gm$SubjectID <- sub_info$SubjectID
temp_gm$Age <- sub_info$Age
temp_gm$Score <- sub_info$Score
temp_gm$Gender <- sub_info$Gender
#now white matter
temp_wm$Brain_Area <- colnames(ModelROIs_OD_wm_reorganized[col])
temp_wm$Value <- ModelROIs_OD_wm_reorganized[, col]
temp_wm$Metric <- "OD"
temp_wm$Tissue <- "wm"
temp_wm$SubjectID <- sub_info$SubjectID
temp_wm$Age <- sub_info$Age
temp_wm$Score <- sub_info$Score
temp_wm$Gender <- sub_info$Gender
# Let's bind everything together
ModelROIs_OD_gm_CLEANED <- rbind(ModelROIs_OD_gm_CLEANED,temp_gm)
ModelROIs_OD_wm_CLEANED <- rbind(ModelROIs_OD_wm_CLEANED,temp_wm)
}
#Small cleaning things
ModelROIs_OD_gm_CLEANED$Value <- as.numeric(unlist(ModelROIs_OD_gm_CLEANED$Value)) #make sure this is numeric
ModelROIs_OD_gm_CLEANED <- ModelROIs_OD_gm_CLEANED %>% arrange(Brain_Area)
##WM
ModelROIs_OD_wm_CLEANED$Value <- as.numeric(unlist(ModelROIs_OD_wm_CLEANED$Value)) #make sure this is numeric
ModelROIs_OD_wm_CLEANED <- ModelROIs_OD_wm_CLEANED %>% arrange(Brain_Area)
ModelROIs_OD_allNODDI <- rbind(ModelROIs_OD_wm_CLEANED,ModelROIs_OD_gm_CLEANED)
# Export
write.csv(ModelROIs_OD_allNODDI,paste0(main_dir,"/Data/modelROIs/Clean/ModelROIs_OD_NODDI.csv"), row.names = FALSE)
# LEt's get all of our labels and vars ready. I know i mispelled temporal but i'm dumb and mispelled it during the extraction so i'm leaving it here like this for now.
label_names <- c("hippocampus_whole","temproal-polar_PRC","PRC","ERC","PHC","DG_CA3","CA1","Subiculum")
# These are the labels i had when extracting but using the reordered ones above ot match the order of the columns bc i'm too lazy to reorder the actual columns
# left_labels <- c(1,5,7,9,11,13,15,17)
# right_labels <- c(2,6,8,10,12,14,16,18)
# MODEL ROIS LABELS
# Hippocampus whole : 1 and 2
# Temporal-polar_PRC : 5 and 6
# PRC : 7 and 8
# ERC : 9 snd 10
# PHC : 11 and 12
# DG_CA3: 13 and 14
# CA1 : 15 and 16
# Subiculum 17 and 18
# First thing is to read in our first CSV. WE need to also make sure the columns are rordered
ModelROIs_L_ISOVF_gm <- read_csv(paste0(main_dir,"Data/modelROIs/Raw/all_L_ISOVF_gmNODDI.csv"))
ModelROIs_R_ISOVF_gm <- read_csv(paste0(main_dir,"Data/modelROIs/Raw/all_R_ISOVF_gmNODDI.csv"))
ModelROIs_R_ISOVF_wm <- read_csv(paste0(main_dir,"Data/modelROIs/Raw/all_R_ISOVF_wmNODDI.csv"))
ModelROIs_L_ISOVF_wm <- read_csv(paste0(main_dir,"Data/modelROIs/Raw/all_L_ISOVF_wmNODDI.csv"))
# LEt's set our  labels based on the order the columns are being read in
left_labels <- c(15,13,9,1,11,7,17,5)
right_labels <- c(16,14,10,2,12,8,18,6)
#Getting number of columns
num_cols <- ncol(ModelROIs_R_ISOVF_wm)
num_rows <- nrow(ModelROIs_L_ISOVF_wm)
ModelROIs_ISOVF_gm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
ModelROIs_ISOVF_wm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
temp_gm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
temp_wm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
# CNeed to go ahead and create new column names for these databses and then combine them as well. Let's go back to ROI numbers
for (col in 1:num_cols) {
print(col)
# Splitting up the column names for each csv
colname_split_L_gm <-
colnames(ModelROIs_L_ISOVF_gm[, col]) %>%  str_split(" ")
colname_split_R_gm <-
colnames(ModelROIs_R_ISOVF_gm[, col]) %>%  str_split(" ")
colname_split_L_wm <-
colnames(ModelROIs_L_ISOVF_wm[, col]) %>%  str_split(" ")
colname_split_R_wm <-
colnames(ModelROIs_R_ISOVF_wm[, col]) %>%  str_split(" ")
# Replacing the column names for each CSV
colnames(ModelROIs_L_ISOVF_gm)[col] <-
paste0("ModelROIs_", colname_split_L_gm[[1]][1], "_", left_labels[col])
colnames(ModelROIs_R_ISOVF_gm)[col] <-
paste0("ModelROIs_", colname_split_R_gm[[1]][1], "_", right_labels[col])
colnames(ModelROIs_L_ISOVF_wm)[col] <-
paste0("ModelROIs_", colname_split_L_wm[[1]][1], "_", left_labels[col])
colnames(ModelROIs_R_ISOVF_wm)[col] <-
paste0("ModelROIs_", colname_split_R_wm[[1]][1], "_", right_labels[col])
# Let's combine the columns now and also reorder
ModelROIs_ISOVF_gm <-
cbind(ModelROIs_L_ISOVF_gm, ModelROIs_R_ISOVF_gm)
ModelROIs_ISOVF_wm <-
cbind(ModelROIs_L_ISOVF_wm, ModelROIs_R_ISOVF_wm)
}
# LEt's reorganize the columns so things are in order
newColOrder <-
c(
"ModelROIs_hippocampus_whole_1",
"ModelROIs_hippocampus_whole_2",
"ModelROIs_temproal-polar_PRC_5",
"ModelROIs_temproal-polar_PRC_6",
"ModelROIs_PRC_7",
"ModelROIs_PRC_8" ,
"ModelROIs_ERC_9",
"ModelROIs_ERC_10",
"ModelROIs_PHC_11",
"ModelROIs_PHC_12",
"ModelROIs_DG_CA3_13",
"ModelROIs_DG_CA3_14",
"ModelROIs_CA1_15",
"ModelROIs_CA1_16",
"ModelROIs_Subiculum_17",
"ModelROIs_Subiculum_18"
)
ModelROIs_ISOVF_gm_reorganized <- ModelROIs_ISOVF_gm[, newColOrder]
ModelROIs_ISOVF_wm_reorganized <- ModelROIs_ISOVF_wm[, newColOrder]
num_cols <- ncol(ModelROIs_ISOVF_gm_reorganized)
num_rows <- nrow(ModelROIs_ISOVF_gm_reorganized)
for (col in 1:num_cols) {
print(col)
# LEt's go back into that loop and fix our voxels
# Let's do some cleaning of the  voxel info
raw_value_gm <-
as.character(unlist(ModelROIs_ISOVF_gm_reorganized[, col])) #GM
raw_value_wm <-
as.character(unlist(ModelROIs_ISOVF_wm_reorganized[, col])) #WM
raw_value_gm_split <- str_split(raw_value_gm, " ")
raw_value_wm_split <- str_split(raw_value_wm, " ")
for (row in 1:num_rows) {
ModelROIs_ISOVF_gm_reorganized[row, col] <-
raw_value_gm_split[[row]][1]
ModelROIs_ISOVF_wm_reorganized[row, col] <-
raw_value_wm_split[[row]][1]
}
temp_gm$Brain_Area <- colnames(ModelROIs_ISOVF_gm_reorganized[col])
temp_gm$Value <- ModelROIs_ISOVF_gm_reorganized[, col]
temp_gm$Metric <- "ISOVF"
temp_gm$Tissue <- "gm"
temp_gm$SubjectID <- sub_info$SubjectID
temp_gm$Age <- sub_info$Age
temp_gm$Score <- sub_info$Score
temp_gm$Gender <- sub_info$Gender
#now white matter
temp_wm$Brain_Area <- colnames(ModelROIs_ISOVF_wm_reorganized[col])
temp_wm$Value <- ModelROIs_ISOVF_wm_reorganized[, col]
temp_wm$Metric <- "ISOVF"
temp_wm$Tissue <- "wm"
temp_wm$SubjectID <- sub_info$SubjectID
temp_wm$Age <- sub_info$Age
temp_wm$Score <- sub_info$Score
temp_wm$Gender <- sub_info$Gender
# Let's bind everything together
ModelROIs_ISOVF_gm_CLEANED <- rbind(ModelROIs_ISOVF_gm_CLEANED,temp_gm)
ModelROIs_ISOVF_wm_CLEANED <- rbind(ModelROIs_ISOVF_wm_CLEANED,temp_wm)
}
#Small cleaning things
ModelROIs_ISOVF_gm_CLEANED$Value <- as.numeric(unlist(ModelROIs_ISOVF_gm_CLEANED$Value)) #make sure this is numeric
ModelROIs_ISOVF_gm_CLEANED <- ModelROIs_ISOVF_gm_CLEANED %>% arrange(Brain_Area)
##WM
ModelROIs_ISOVF_wm_CLEANED$Value <- as.numeric(unlist(ModelROIs_ISOVF_wm_CLEANED$Value)) #make sure this is numeric
ModelROIs_ISOVF_wm_CLEANED <- ModelROIs_ISOVF_wm_CLEANED %>% arrange(Brain_Area)
ModelROIs_ISOVF_allNODDI <- rbind(ModelROIs_ISOVF_wm_CLEANED,ModelROIs_ISOVF_gm_CLEANED)
# Export
write.csv(ModelROIs_ISOVF_allNODDI,paste0(main_dir,"/Data/modelROIs/Clean/ModelROIs_ISOVF_NODDI.csv"), row.names = FALSE)
View(ModelROIs_OD_allNODDI)
library(ggplot2)
#(plyr)
library(tidyverse)
library(stringr)
library(kableExtra)
library(markdown)
clean_noddi_csv <- function(atlas) {
#' @description: Purpose of this function is to clean up the CSV that we are reading into here so that we have a nice and clean data frame to work with
#' @input: atlas names such as : "HarvardCort50", "HarvardSub50", "ModelRois"
#' @return: DF
#
# Inputs
df <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
temp_df <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
metrics <- c("ICVF", "OD", "ISOVF")
tissues <- c("gm", "wm")
# LEt's create an if statement for Harvard Cort
if (atlas == "HarvardCort50") {
atlas_dir <- paste0(main_dir, "Data/harvardcort50")
# First we need to go thorugh each CSV
for (M in metrics) {
for (t in tissues) {
CSV <- read_csv(paste0(atlas_dir, "/all_", M, "_", t, "NODDI.csv")) #REad in the correct CSV
# Get number of rows and cols for later
num_cols <- ncol(CSV)
num_rows <- nrow(CSV)
# Let's get rid of those subject numbers we actually don't need rn
evenrows <- seq(2,num_rows,2)
CSV_subnums_removed <- CSV[evenrows,] # also removing an empty row.. should be 78 subs
for (col in 1:num_cols) {
print(col)
# Create new label for Brain area by cleaning column na,es
colname_split <- colnames(CSV_subnums_removed[, col]) %>%  str_split( " ")
newcolname <- paste0("harvardcort50_", colname_split[[1]][1])
colnames(CSV_subnums_removed)[col] <- newcolname
# Let's do some cleaning of the  voxel info out of there
Rawvalue <- as.character(unlist(CSV_subnums_removed[, col]))
x <- str_split(Rawvalue, " ")
for (row in 1:nrow(CSV_subnums_removed)) {
CSV_subnums_removed[row, col] <- x[[row]][1]
as.numeric(CSV[row, col])
}
temp_df$Brain_Area <- newcolname
temp_df$Value <- CSV_subnums_removed[, col]
temp_df$Metric <- M
temp_df$Tissue <- t
temp_df$SubjectID <- sub_info$SubjectID
temp_df$Age <- sub_info$Age
temp_df$Score <- sub_info$Score
temp_df$Gender <- sub_info$Gender
# Need to make sure subject info get's added here
df <- rbind(temp_df, df)
}
}
cleaned_df <- df %>% arrange(Brain_Area)
}
colnames(cleaned_df[2]) <- "Value"
} else if (atlas == "HarvardSub50") {
atlas_dir <- paste0(main_dir, "Data/harvardsub50")
# First we need to go thorugh each CSV
for (M in metrics) {
for (t in tissues) {
CSV <- read_csv(paste0(atlas_dir, "/all_", M, "_", t, "NODDI.csv"))
num_cols <- ncol(CSV)
num_rows <- nrow(CSV)
# Let's get rid of those subject numbers we actually don't need rn
evenrows <- seq(2,num_rows,2)
CSV_subnums_removed <- CSV[evenrows,] %>% head(-1) # also removing an empty row.. should be 78 subs
for (col in 1:num_cols) {
print(col)
# Create new label for Brain area by cleaning column na,es
colname_split <- colnames(CSV_subnums_removed[, col]) %>%  str_split(" ")
newcolname <- paste0("harvardsub50_", colname_split[[1]][1])
colnames(CSV_subnums_removed)[col] <- newcolname
# Let's do some cleaning of the  voxel info out of there
Rawvalue <- as.character(unlist(CSV_subnums_removed[, col]))
x <- str_split(Rawvalue, " ")
for (row in 1:nrow(CSV_subnums_removed)) {
CSV_subnums_removed[row, col] <- x[[row]][1]
as.numeric(CSV_subnums_removed[row, col])
}
temp_df$Brain_Area <- newcolname
temp_df$Value <- CSV_subnums_removed[, col]
temp_df$Metric <- M
temp_df$Tissue <- t
temp_df$SubjectID <- sub_info$SubjectID
temp_df$Age <- sub_info$Age
temp_df$Score <- sub_info$Score
temp_df$Gender <- sub_info$Gender
# Need to make sure subject info get's added here
df <- rbind(temp_df, df)
}
}
cleaned_df <- df %>% arrange(Brain_Area)
}
colnames(cleaned_df[2]) <- "Value"
} else if (atlas == "ModelRois") {
atlas_dir <- paste0(main_dir, "Data/modelROIs")
# First we need to go thorugh each CSV
for (M in metrics) {
for (t in tissues) {
CSV <- read_csv(paste0(atlas_dir, "/all_", M, "_", t, "NODDI.csv"))
num_cols <- ncol(CSV)
num_rows <- nrow(CSV)
evenrows <- seq(2,num_rows,2)
CSV_subnums_removed <- CSV[evenrows,] %>% head(-1) # also removing an empty row.. should be 78 subs
for (col in 1:num_cols) {
print(col)
# Create new label for Brain area by cleaning column na,es
colname_split <- colnames(CSV_subnums_removed[, col]) %>%  str_split(" ")
newcolname <- paste0("ModelROIs", colname_split[[1]][1])
colnames(CSV)[col] <- newcolname
# Let's do some cleaning of the  voxel info out of there
Rawvalue <- as.character(unlist(CSV_subnums_removed[, col]))
x <- str_split(Rawvalue, " ")
for (row in 1:nrow(CSV_subnums_removed)) {
CSV_subnums_removed[row, col] <- x[[row]][1]
as.numeric(CSV[row, col])
}
temp_df$Brain_Area <- newcolname
temp_df$Value <- CSV_subnums_removed[, col]
temp_df$Metric <- M
temp_df$Tissue <- t
temp_df$SubjectID <- sub_info$SubjectID
temp_df$Age <- sub_info$Age
temp_df$Score <- sub_info$Score
temp_df$Gender <- sub_info$Gender
# Need to make sure subject info get's added here
df <- rbind(temp_df, df)
}
}
cleaned_df <- df %>% arrange(Brain_Area)
}
colnames(cleaned_df[2]) <- "Value"
}
return (cleaned_df)
}
main_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/NODDI_2025/"
#Using liz's old version of the noddi data set so that i also have a template for what i want.
main_dir <- "/Users/danielacossio/Documents/Chrastil_Lab/Projects/NODDI_2025/"
old_df <- read_csv(paste0(main_dir,"noddi_data.csv"))
columns <- c("Brain_Area","Value","SubjectID","Metric","Score","Age","Gender", "Tissue")
clean_NODDI_DF <- data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
sub_info <- old_df %>% select("SubjectID","Age","Gender","Score") %>% unique() %>% filter(SubjectID != 64)
View(sub_info)
HC50_ICVF_gm <- read_csv(paste0(main_dir,"Data/harvardcort50/Raw/all_ICVF_gmNODDI.csv"))
HC50_ICVF_wm <- read_csv(paste0(main_dir,"Data/harvardcort50/Raw/all_ICVF_wmNODDI.csv"))
View(HC50_ICVF_wm)
