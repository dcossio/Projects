HS50_ICVF_wm_CLEANED <- rbind(HS50_ICVF_wm_CLEANED,temp_wm)
}
#Small cleaning things
HS50_ICVF_gm_CLEANED$Value <- as.numeric(unlist(HS50_ICVF_gm_CLEANED$Value)) #make sure this is numeric
HS50_ICVF_gm_CLEANED <- HS50_ICVF_gm_CLEANED %>% arrange(Brain_Area)
colnames(HS50_ICVF_gm_CLEANED[2]) <- "Value"
##WM
HS50_ICVF_wm_CLEANED$Value <- as.numeric(unlist(HS50_ICVF_wm_CLEANED$Value)) #make sure this is numeric
HS50_ICVF_wm_CLEANED <- HS50_ICVF_wm_CLEANED %>% arrange(Brain_Area)
colnames(HS50_ICVF_wm_CLEANED[2]) <- "Value"
HS50_ICVF_allNODDI <- rbind(HS50_ICVF_wm_CLEANED,HS50_ICVF_gm_CLEANED)
# Export
write.csv(HS50_ICVF_allNODDI,paste0(main_dir,"/HS50_ICVF_NODDI.csv"), row.names = FALSE)
# First thing is to read in our first CSV
HS50_ICVF_gm <- read_csv(paste0(main_dir,"Data/harvardsub50/Raw/all_ICVF_gmNODDI.csv"))
HS50_ICVF_wm <- read_csv(paste0(main_dir,"Data/harvardsub50/Raw/all_ICVF_wmNODDI.csv"))
# Get number of rows and cols for later. Same for both so just using one
num_cols <- ncol(HS50_ICVF_gm)
num_rows <- nrow(HS50_ICVF_gm)
# Let's get rid of those subject numbers we actually don't need rn
evenrows <- seq(2,num_rows,2)
HS50_ICVF_gm_subsremoved <- HS50_ICVF_gm[evenrows,]
HS50_ICVF_wm_subsremoved <- HS50_ICVF_wm[evenrows,]
#Updated number of cols
num_cols <- ncol(HS50_ICVF_gm_subsremoved)
num_rows <- nrow(HS50_ICVF_gm_subsremoved)
HS50_ICVF_gm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
HS50_ICVF_wm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
temp_gm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
temp_wm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
# Create new label for Brain area by cleaning column names. again same for each database so just using one
for (col in 1:num_cols) {
print(col)
colname_split <- colnames(HS50_ICVF_gm_subsremoved[, col]) %>%  str_split( " ")
newcolname <- paste0("harvardsub50_", colname_split[[1]][1])
colnames(HS50_ICVF_gm_subsremoved)[col] <- newcolname
colnames(HS50_ICVF_wm_subsremoved)[col] <- newcolname
# Let's do some cleaning of the  voxel info out of there first with GM
raw_value <- as.character(unlist(HS50_ICVF_gm_subsremoved[, col]))
raw_value_split <- str_split(raw_value, " ")
for (row in 1:num_rows) {
HS50_ICVF_gm_subsremoved[row, col] <- raw_value_split[[row]][1]
}
temp_gm$Brain_Area <- newcolname
temp_gm$Value <- HS50_ICVF_gm_subsremoved[, col]
temp_gm$Metric <- "ICVF"
temp_gm$Tissue <- "gm"
temp_gm$SubjectID <- sub_info$SubjectID
temp_gm$Age <- sub_info$Age
temp_gm$Score <- sub_info$Score
temp_gm$Gender <- sub_info$Gender
#now white matter
raw_value <- as.character(unlist(HS50_ICVF_wm_subsremoved[, col]))
raw_value_split <- str_split(raw_value, " ")
for (row in 1:num_rows) {
HS50_ICVF_wm_subsremoved[row, col] <- raw_value_split[[row]][1]
}
temp_wm$Brain_Area <- newcolname
temp_wm$Value <- HS50_ICVF_wm_subsremoved[, col]
temp_wm$Metric <- "ICVF"
temp_wm$Tissue <- "wm"
temp_wm$SubjectID <- sub_info$SubjectID
temp_wm$Age <- sub_info$Age
temp_wm$Score <- sub_info$Score
temp_wm$Gender <- sub_info$Gender
# Let's bind everything together
HS50_ICVF_gm_CLEANED <- rbind(HS50_ICVF_gm_CLEANED,temp_gm)
HS50_ICVF_wm_CLEANED <- rbind(HS50_ICVF_wm_CLEANED,temp_wm)
}
#Small cleaning things
HS50_ICVF_gm_CLEANED$Value <- as.numeric(unlist(HS50_ICVF_gm_CLEANED$Value)) #make sure this is numeric
HS50_ICVF_gm_CLEANED <- HS50_ICVF_gm_CLEANED %>% arrange(Brain_Area)
colnames(HS50_ICVF_gm_CLEANED[2]) <- "Value"
##WM
HS50_ICVF_wm_CLEANED$Value <- as.numeric(unlist(HS50_ICVF_wm_CLEANED$Value)) #make sure this is numeric
HS50_ICVF_wm_CLEANED <- HS50_ICVF_wm_CLEANED %>% arrange(Brain_Area)
colnames(HS50_ICVF_wm_CLEANED[2]) <- "Value"
HS50_ICVF_allNODDI <- rbind(HS50_ICVF_wm_CLEANED,HS50_ICVF_gm_CLEANED)
# Export
write.csv(HS50_ICVF_allNODDI,paste0(main_dir,"Data/harvardsub50/Cleaned/HS50_ICVF_NODDI.csv"), row.names = FALSE)
# First thing is to read in our first CSV
HS50_ICVF_gm <- read_csv(paste0(main_dir,"Data/harvardsub50/Raw/all_ICVF_gmNODDI.csv"))
HS50_ICVF_wm <- read_csv(paste0(main_dir,"Data/harvardsub50/Raw/all_ICVF_wmNODDI.csv"))
# Get number of rows and cols for later. Same for both so just using one
num_cols <- ncol(HS50_ICVF_gm)
num_rows <- nrow(HS50_ICVF_gm)
# Let's get rid of those subject numbers we actually don't need rn
evenrows <- seq(2,num_rows,2)
HS50_ICVF_gm_subsremoved <- HS50_ICVF_gm[evenrows,]
HS50_ICVF_wm_subsremoved <- HS50_ICVF_wm[evenrows,]
#Updated number of cols
num_cols <- ncol(HS50_ICVF_gm_subsremoved)
num_rows <- nrow(HS50_ICVF_gm_subsremoved)
HS50_ICVF_gm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
HS50_ICVF_wm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
temp_gm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
temp_wm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
# Create new label for Brain area by cleaning column names. again same for each database so just using one
for (col in 1:num_cols) {
print(col)
colname_split <- colnames(HS50_ICVF_gm_subsremoved[, col]) %>%  str_split( " ")
newcolname <- paste0("harvardsub50_", colname_split[[1]][1])
colnames(HS50_ICVF_gm_subsremoved)[col] <- newcolname
colnames(HS50_ICVF_wm_subsremoved)[col] <- newcolname
# Let's do some cleaning of the  voxel info out of there first with GM
raw_value <- as.character(unlist(HS50_ICVF_gm_subsremoved[, col]))
raw_value_split <- str_split(raw_value, " ")
for (row in 1:num_rows) {
HS50_ICVF_gm_subsremoved[row, col] <- raw_value_split[[row]][1]
}
temp_gm$Brain_Area <- newcolname
temp_gm$Value <- HS50_ICVF_gm_subsremoved[, col]
temp_gm$Metric <- "ICVF"
temp_gm$Tissue <- "gm"
temp_gm$SubjectID <- sub_info$SubjectID
temp_gm$Age <- sub_info$Age
temp_gm$Score <- sub_info$Score
temp_gm$Gender <- sub_info$Gender
#now white matter
raw_value <- as.character(unlist(HS50_ICVF_wm_subsremoved[, col]))
raw_value_split <- str_split(raw_value, " ")
for (row in 1:num_rows) {
HS50_ICVF_wm_subsremoved[row, col] <- raw_value_split[[row]][1]
}
temp_wm$Brain_Area <- newcolname
temp_wm$Value <- HS50_ICVF_wm_subsremoved[, col]
temp_wm$Metric <- "ICVF"
temp_wm$Tissue <- "wm"
temp_wm$SubjectID <- sub_info$SubjectID
temp_wm$Age <- sub_info$Age
temp_wm$Score <- sub_info$Score
temp_wm$Gender <- sub_info$Gender
# Let's bind everything together
HS50_ICVF_gm_CLEANED <- rbind(HS50_ICVF_gm_CLEANED,temp_gm)
HS50_ICVF_wm_CLEANED <- rbind(HS50_ICVF_wm_CLEANED,temp_wm)
}
#Small cleaning things
HS50_ICVF_gm_CLEANED$Value <- as.numeric(unlist(HS50_ICVF_gm_CLEANED$Value)) #make sure this is numeric
HS50_ICVF_gm_CLEANED <- HS50_ICVF_gm_CLEANED %>% arrange(Brain_Area)
colnames(HS50_ICVF_gm_CLEANED[2]) <- "Value"
##WM
HS50_ICVF_wm_CLEANED$Value <- as.numeric(unlist(HS50_ICVF_wm_CLEANED$Value)) #make sure this is numeric
HS50_ICVF_wm_CLEANED <- HS50_ICVF_wm_CLEANED %>% arrange(Brain_Area)
colnames(HS50_ICVF_wm_CLEANED[2]) <- "Value"
HS50_ICVF_allNODDI <- rbind(HS50_ICVF_wm_CLEANED,HS50_ICVF_gm_CLEANED)
# Export
write.csv(HS50_ICVF_allNODDI,paste0(main_dir,"Data/harvardsub50/Clean/HS50_ICVF_NODDI.csv"), row.names = FALSE)
# First thing is to read in our first CSV
HS50_OD_gm <- read_csv(paste0(main_dir,"Data/harvardsub50/Raw/all_OD_gmNODDI.csv"))
HS50_OD_wm <- read_csv(paste0(main_dir,"Data/harvardsub50/Raw/all_OD_wmNODDI.csv"))
# Get number of rows and cols for later. Same for both so just using one
num_cols <- ncol(HS50_OD_gm)
num_rows <- nrow(HS50_OD_gm)
# Let's get rid of those subject numbers we actually don't need rn
evenrows <- seq(2,num_rows,2)
HS50_OD_gm_subsremoved <- HS50_OD_gm[evenrows,]
HS50_OD_wm_subsremoved <- HS50_OD_wm[evenrows,]
#Updated number of cols
num_cols <- ncol(HS50_OD_gm_subsremoved)
num_rows <- nrow(HS50_OD_gm_subsremoved)
HS50_OD_gm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
HS50_OD_wm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
temp_gm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
temp_wm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
# Create new label for Brain area by cleaning column names. again same for each database so just using one
for (col in 1:num_cols) {
print(col)
colname_split <- colnames(HS50_OD_gm_subsremoved[, col]) %>%  str_split( " ")
newcolname <- paste0("harvardsub50_", colname_split[[1]][1])
colnames(HS50_OD_gm_subsremoved)[col] <- newcolname
colnames(HS50_OD_wm_subsremoved)[col] <- newcolname
# Let's do some cleaning of the  voxel info out of there first with GM
raw_value <- as.character(unlist(HS50_OD_gm_subsremoved[, col]))
raw_value_split <- str_split(raw_value, " ")
for (row in 1:num_rows) {
HS50_OD_gm_subsremoved[row, col] <- raw_value_split[[row]][1]
}
temp_gm$Brain_Area <- newcolname
temp_gm$Value <- HS50_OD_gm_subsremoved[, col]
temp_gm$Metric <- "OD"
temp_gm$Tissue <- "gm"
temp_gm$SubjectID <- sub_info$SubjectID
temp_gm$Age <- sub_info$Age
temp_gm$Score <- sub_info$Score
temp_gm$Gender <- sub_info$Gender
#now white matter
raw_value <- as.character(unlist(HS50_OD_wm_subsremoved[, col]))
raw_value_split <- str_split(raw_value, " ")
for (row in 1:num_rows) {
HS50_OD_wm_subsremoved[row, col] <- raw_value_split[[row]][1]
}
temp_wm$Brain_Area <- newcolname
temp_wm$Value <- HS50_OD_wm_subsremoved[, col]
temp_wm$Metric <- "OD"
temp_wm$Tissue <- "wm"
temp_wm$SubjectID <- sub_info$SubjectID
temp_wm$Age <- sub_info$Age
temp_wm$Score <- sub_info$Score
temp_wm$Gender <- sub_info$Gender
# Let's bind everything together
HS50_OD_gm_CLEANED <- rbind(HS50_OD_gm_CLEANED,temp_gm)
HS50_OD_wm_CLEANED <- rbind(HS50_OD_wm_CLEANED,temp_wm)
}
#Small cleaning things
HS50_OD_gm_CLEANED$Value <- as.numeric(unlist(HS50_OD_gm_CLEANED$Value)) #make sure this is numeric
HS50_OD_gm_CLEANED <- HS50_OD_gm_CLEANED %>% arrange(Brain_Area)
colnames(HS50_OD_gm_CLEANED[2]) <- "Value"
##WM
HS50_OD_wm_CLEANED$Value <- as.numeric(unlist(HS50_OD_wm_CLEANED$Value)) #make sure this is numeric
HS50_OD_wm_CLEANED <- HS50_OD_wm_CLEANED %>% arrange(Brain_Area)
colnames(HS50_OD_wm_CLEANED[2]) <- "Value"
HS50_OD_allNODDI <- rbind(HS50_OD_gm_CLEANED,HS50_OD_wm_CLEANED)
# Export
write.csv(HS50_OD_allNODDI,paste0(main_dir,"Data/harvardsub50/Clean/HS50_OD_NODDI.csv"), row.names = FALSE)
# First thing is to read in our first CSV
HS50_ISOVF_gm <- read_csv(paste0(main_dir,"Data/harvardsub50/Raw/all_ISOVF_gmNODDI.csv"))
HS50_ISOVF_wm <- read_csv(paste0(main_dir,"Data/harvardsub50/Raw/all_ISOVF_wmNODDI.csv"))
# Get number of rows and cols for later. Same for both so just using one
num_cols <- ncol(HS50_ISOVF_gm)
num_rows <- nrow(HS50_ISOVF_gm)
# Let's get rid of those subject numbers we actually don't need rn
evenrows <- seq(2,num_rows,2)
HS50_ISOVF_gm_subsremoved <- HS50_ISOVF_gm[evenrows,]
HS50_ISOVF_wm_subsremoved <- HS50_ISOVF_wm[evenrows,]
#Updated number of cols
num_cols <- ncol(HS50_ISOVF_gm_subsremoved)
num_rows <- nrow(HS50_ISOVF_gm_subsremoved)
HS50_ISOVF_gm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
HS50_ISOVF_wm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
temp_gm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
temp_wm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
# Create new label for Brain area by cleaning column names. again same for each database so just using one
for (col in 1:num_cols) {
print(col)
colname_split <- colnames(HS50_ISOVF_gm_subsremoved[, col]) %>%  str_split( " ")
newcolname <- paste0("harvardsub50_", colname_split[[1]][1])
colnames(HS50_ISOVF_gm_subsremoved)[col] <- newcolname
colnames(HS50_ISOVF_wm_subsremoved)[col] <- newcolname
# Let's do some cleaning of the  voxel info out of there first with GM
raw_value <- as.character(unlist(HS50_ISOVF_gm_subsremoved[, col]))
raw_value_split <- str_split(raw_value, " ")
for (row in 1:num_rows) {
HS50_ISOVF_gm_subsremoved[row, col] <- raw_value_split[[row]][1]
}
temp_gm$Brain_Area <- newcolname
temp_gm$Value <- HS50_ISOVF_gm_subsremoved[, col]
temp_gm$Metric <- "ISOVF"
temp_gm$Tissue <- "gm"
temp_gm$SubjectID <- sub_info$SubjectID
temp_gm$Age <- sub_info$Age
temp_gm$Score <- sub_info$Score
temp_gm$Gender <- sub_info$Gender
#now white matter
raw_value <- as.character(unlist(HS50_ISOVF_wm_subsremoved[, col]))
raw_value_split <- str_split(raw_value, " ")
for (row in 1:num_rows) {
HS50_ISOVF_wm_subsremoved[row, col] <- raw_value_split[[row]][1]
}
temp_wm$Brain_Area <- newcolname
temp_wm$Value <- HS50_ISOVF_wm_subsremoved[, col]
temp_wm$Metric <- "ISOVF"
temp_wm$Tissue <- "wm"
temp_wm$SubjectID <- sub_info$SubjectID
temp_wm$Age <- sub_info$Age
temp_wm$Score <- sub_info$Score
temp_wm$Gender <- sub_info$Gender
# Let's bind everything together
HS50_ISOVF_gm_CLEANED <- rbind(HS50_ISOVF_gm_CLEANED,temp_gm)
HS50_ISOVF_wm_CLEANED <- rbind(HS50_ISOVF_wm_CLEANED,temp_wm)
}
#Small cleaning things
HS50_ISOVF_gm_CLEANED$Value <- as.numeric(unlist(HS50_ISOVF_gm_CLEANED$Value)) #make sure this is numeric
HS50_ISOVF_gm_CLEANED <- HS50_ISOVF_gm_CLEANED %>% arrange(Brain_Area)
colnames(HS50_ISOVF_gm_CLEANED[2]) <- "Value"
##WM
HS50_ISOVF_wm_CLEANED$Value <- as.numeric(unlist(HS50_ISOVF_wm_CLEANED$Value)) #make sure this is numeric
HS50_ISOVF_wm_CLEANED <- HS50_ISOVF_wm_CLEANED %>% arrange(Brain_Area)
colnames(HS50_ISOVF_wm_CLEANED[2]) <- "Value"
HS50_ISOVF_allNODDI <- rbind(HS50_ISOVF_gm_CLEANED,HS50_ISOVF_wm_CLEANED)
# Export
write.csv(HS50_ISOVF_allNODDI,paste0(main_dir,"Data/harvardsub50/Clean/HS50_ISOVF_NODDI.csv"), row.names = FALSE)
# First thing is to read in our first CSV
HC50_ICVF_gm <- read_csv(paste0(main_dir,"Data/harvardcort50/Raw/all_ICVF_gmNODDI.csv"))
HC50_ICVF_wm <- read_csv(paste0(main_dir,"Data/harvardcort50/Raw/all_ICVF_wmNODDI.csv"))
# Get number of rows and cols for later. Same for both so just using one
num_cols <- ncol(HC50_ICVF_gm)
num_rows <- nrow(HC50_ICVF_gm)
# Let's get rid of those subject numbers we actually don't need rn
evenrows <- seq(2,num_rows,2)
HC50_ICVF_gm_subsremoved <- HC50_ICVF_gm[evenrows,]
HC50_ICVF_wm_subsremoved <- HC50_ICVF_wm[evenrows,]
#Updated number of cols
num_cols <- ncol(HC50_ICVF_gm_subsremoved)
num_rows <- nrow(HC50_ICVF_gm_subsremoved)
HC50_ICVF_gm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
HC50_ICVF_wm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
temp_gm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
temp_wm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
# Create new label for Brain area by cleaning column names. again same for each database so just using one
for (col in 1:num_cols) {
print(col)
colname_split <- colnames(HC50_ICVF_gm_subsremoved[, col]) %>%  str_split( " ")
newcolname <- paste0("harvardcort50_", colname_split[[1]][1])
colnames(HC50_ICVF_gm_subsremoved)[col] <- newcolname
colnames(HC50_ICVF_wm_subsremoved)[col] <- newcolname
# Let's do some cleaning of the  voxel info out of there first with GM
raw_value <- as.character(unlist(HC50_ICVF_gm_subsremoved[, col]))
raw_value_split <- str_split(raw_value, " ")
for (row in 1:num_rows) {
HC50_ICVF_gm_subsremoved[row, col] <- raw_value_split[[row]][1]
}
temp_gm$Brain_Area <- newcolname
temp_gm$Value <- HC50_ICVF_gm_subsremoved[, col]
temp_gm$Metric <- "ICVF"
temp_gm$Tissue <- "gm"
temp_gm$SubjectID <- sub_info$SubjectID
temp_gm$Age <- sub_info$Age
temp_gm$Score <- sub_info$Score
temp_gm$Gender <- sub_info$Gender
#now white matter
raw_value <- as.character(unlist(HC50_ICVF_wm_subsremoved[, col]))
raw_value_split <- str_split(raw_value, " ")
for (row in 1:num_rows) {
HC50_ICVF_wm_subsremoved[row, col] <- raw_value_split[[row]][1]
}
temp_wm$Brain_Area <- newcolname
temp_wm$Value <- HC50_ICVF_wm_subsremoved[, col]
temp_wm$Metric <- "ICVF"
temp_wm$Tissue <- "wm"
temp_wm$SubjectID <- sub_info$SubjectID
temp_wm$Age <- sub_info$Age
temp_wm$Score <- sub_info$Score
temp_wm$Gender <- sub_info$Gender
# Let's bind everything together
HC50_ICVF_gm_CLEANED <- rbind(HC50_ICVF_gm_CLEANED,temp_gm)
HC50_ICVF_wm_CLEANED <- rbind(HC50_ICVF_wm_CLEANED,temp_wm)
}
#Small cleaning things
HC50_ICVF_gm_CLEANED$Value <- as.numeric(unlist(HC50_ICVF_gm_CLEANED$Value)) #make sure this is numeric
HC50_ICVF_gm_CLEANED <- HC50_ICVF_gm_CLEANED %>% arrange(Brain_Area)
colnames(HC50_ICVF_gm_CLEANED[2]) <- "Value"
##WM
HC50_ICVF_wm_CLEANED$Value <- as.numeric(unlist(HC50_ICVF_wm_CLEANED$Value)) #make sure this is numeric
HC50_ICVF_wm_CLEANED <- HC50_ICVF_wm_CLEANED %>% arrange(Brain_Area)
colnames(HC50_ICVF_wm_CLEANED[2]) <- "Value"
HC50_ICVF_allNODDI <- rbind(HC50_ICVF_wm_CLEANED,HC50_ICVF_gm_CLEANED)
# Export
write.csv(HC50_ICVF_allNODDI,paste0(main_dir,"Data/harvardcort50/Cleaned/HC50_ICVF_NODDI.csv"), row.names = FALSE)
# First thing is to read in our first CSV
HC50_OD_gm <- read_csv(paste0(main_dir,"Data/harvardcort50/Raw/all_OD_gmNODDI.csv"))
HC50_OD_wm <- read_csv(paste0(main_dir,"Data/harvardcort50/Raw/all_OD_wmNODDI.csv"))
# Get number of rows and cols for later. Same for both so just using one
num_cols <- ncol(HC50_OD_gm)
num_rows <- nrow(HC50_OD_gm)
# Let's get rid of those subject numbers we actually don't need rn
evenrows <- seq(2,num_rows,2)
HC50_OD_gm_subsremoved <- HC50_OD_gm[evenrows,]
HC50_OD_wm_subsremoved <- HC50_OD_wm[evenrows,]
#Updated number of cols
num_cols <- ncol(HC50_OD_gm_subsremoved)
num_rows <- nrow(HC50_OD_gm_subsremoved)
HC50_OD_gm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
HC50_OD_wm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
temp_gm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
temp_wm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
# Create new label for Brain area by cleaning column names. again same for each database so just using one
for (col in 1:num_cols) {
print(col)
colname_split <- colnames(HC50_OD_gm_subsremoved[, col]) %>%  str_split( " ")
newcolname <- paste0("harvardcort50_", colname_split[[1]][1])
colnames(HC50_OD_gm_subsremoved)[col] <- newcolname
colnames(HC50_OD_wm_subsremoved)[col] <- newcolname
# Let's do some cleaning of the  voxel info out of there first with GM
raw_value <- as.character(unlist(HC50_OD_gm_subsremoved[, col]))
raw_value_split <- str_split(raw_value, " ")
for (row in 1:num_rows) {
HC50_OD_gm_subsremoved[row, col] <- raw_value_split[[row]][1]
}
temp_gm$Brain_Area <- newcolname
temp_gm$Value <- HC50_OD_gm_subsremoved[, col]
temp_gm$Metric <- "OD"
temp_gm$Tissue <- "gm"
temp_gm$SubjectID <- sub_info$SubjectID
temp_gm$Age <- sub_info$Age
temp_gm$Score <- sub_info$Score
temp_gm$Gender <- sub_info$Gender
#now white matter
raw_value <- as.character(unlist(HC50_OD_wm_subsremoved[, col]))
raw_value_split <- str_split(raw_value, " ")
for (row in 1:num_rows) {
HC50_OD_wm_subsremoved[row, col] <- raw_value_split[[row]][1]
}
temp_wm$Brain_Area <- newcolname
temp_wm$Value <- HC50_OD_wm_subsremoved[, col]
temp_wm$Metric <- "OD"
temp_wm$Tissue <- "wm"
temp_wm$SubjectID <- sub_info$SubjectID
temp_wm$Age <- sub_info$Age
temp_wm$Score <- sub_info$Score
temp_wm$Gender <- sub_info$Gender
# Let's bind everything together
HC50_OD_gm_CLEANED <- rbind(HC50_OD_gm_CLEANED,temp_gm)
HC50_OD_wm_CLEANED <- rbind(HC50_OD_wm_CLEANED,temp_wm)
}
#Small cleaning things
HC50_OD_gm_CLEANED$Value <- as.numeric(unlist(HC50_OD_gm_CLEANED$Value)) #make sure this is numeric
HC50_OD_gm_CLEANED <- HC50_OD_gm_CLEANED %>% arrange(Brain_Area)
colnames(HC50_OD_gm_CLEANED[2]) <- "Value"
##WM
HC50_OD_wm_CLEANED$Value <- as.numeric(unlist(HC50_OD_wm_CLEANED$Value)) #make sure this is numeric
HC50_OD_wm_CLEANED <- HC50_OD_wm_CLEANED %>% arrange(Brain_Area)
colnames(HC50_OD_wm_CLEANED[2]) <- "Value"
HC50_OD_allNODDI <- rbind(HC50_OD_gm_CLEANED,HC50_OD_wm_CLEANED)
# Export
write.csv(HC50_OD_allNODDI,paste0(main_dir,"Data/harvardcort50/Cleaned/HC50_OD_NODDI.csv"), row.names = FALSE)
# First thing is to read in our first CSV
HC50_ISOVF_gm <- read_csv(paste0(main_dir,"Data/harvardsub50/Raw/"))
# First thing is to read in our first CSV
HC50_ISOVF_gm <- read_csv(paste0(main_dir,"Data/harvardsub50/Raw/all_ISOVF_gmNODDI.csv"))
HC50_ISOVF_wm <- read_csv(paste0(main_dir,"Data/harvardsub50/Raw/all_ISOVF_wmNODDI.csv"))
# Get number of rows and cols for later. Same for both so just using one
num_cols <- ncol(HC50_ISOVF_gm)
num_rows <- nrow(HC50_ISOVF_gm)
# Let's get rid of those subject numbers we actually don't need rn
evenrows <- seq(2,num_rows,2)
HC50_ISOVF_gm_subsremoved <- HC50_ISOVF_gm[evenrows,]
HC50_ISOVF_wm_subsremoved <- HC50_ISOVF_wm[evenrows,]
#Updated number of cols
num_cols <- ncol(HC50_ISOVF_gm_subsremoved)
num_rows <- nrow(HC50_ISOVF_gm_subsremoved)
HC50_ISOVF_gm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
HC50_ISOVF_wm_CLEANED <-
data.frame(matrix(nrow = 0, ncol = 8)) %>% `colnames<-`(columns)
temp_gm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
temp_wm <-
data.frame(matrix(nrow = 78, ncol = 8)) %>% `colnames<-`(columns)
# Create new label for Brain area by cleaning column names. again same for each database so just using one
for (col in 1:num_cols) {
print(col)
colname_split <- colnames(HC50_ISOVF_gm_subsremoved[, col]) %>%  str_split( " ")
newcolname <- paste0("harvardcort50_", colname_split[[1]][1])
colnames(HC50_ISOVF_gm_subsremoved)[col] <- newcolname
colnames(HC50_ISOVF_wm_subsremoved)[col] <- newcolname
# Let's do some cleaning of the  voxel info out of there first with GM
raw_value <- as.character(unlist(HC50_ISOVF_gm_subsremoved[, col]))
raw_value_split <- str_split(raw_value, " ")
for (row in 1:num_rows) {
HC50_ISOVF_gm_subsremoved[row, col] <- raw_value_split[[row]][1]
}
temp_gm$Brain_Area <- newcolname
temp_gm$Value <- HC50_ISOVF_gm_subsremoved[, col]
temp_gm$Metric <- "ISOVF"
temp_gm$Tissue <- "gm"
temp_gm$SubjectID <- sub_info$SubjectID
temp_gm$Age <- sub_info$Age
temp_gm$Score <- sub_info$Score
temp_gm$Gender <- sub_info$Gender
#now white matter
raw_value <- as.character(unlist(HC50_ISOVF_wm_subsremoved[, col]))
raw_value_split <- str_split(raw_value, " ")
for (row in 1:num_rows) {
HC50_ISOVF_wm_subsremoved[row, col] <- raw_value_split[[row]][1]
}
temp_wm$Brain_Area <- newcolname
temp_wm$Value <- HC50_ISOVF_wm_subsremoved[, col]
temp_wm$Metric <- "ISOVF"
temp_wm$Tissue <- "wm"
temp_wm$SubjectID <- sub_info$SubjectID
temp_wm$Age <- sub_info$Age
temp_wm$Score <- sub_info$Score
temp_wm$Gender <- sub_info$Gender
# Let's bind everything together
HC50_ISOVF_gm_CLEANED <- rbind(HC50_ISOVF_gm_CLEANED,temp_gm)
HC50_ISOVF_wm_CLEANED <- rbind(HC50_ISOVF_wm_CLEANED,temp_wm)
}
#Small cleaning things
HC50_ISOVF_gm_CLEANED$Value <- as.numeric(unlist(HC50_ISOVF_gm_CLEANED$Value)) #make sure this is numeric
HC50_ISOVF_gm_CLEANED <- HC50_ISOVF_gm_CLEANED %>% arrange(Brain_Area)
colnames(HC50_ISOVF_gm_CLEANED[2]) <- "Value"
##WM
HC50_ISOVF_wm_CLEANED$Value <- as.numeric(unlist(HC50_ISOVF_wm_CLEANED$Value)) #make sure this is numeric
HC50_ISOVF_wm_CLEANED <- HC50_ISOVF_wm_CLEANED %>% arrange(Brain_Area)
colnames(HC50_ISOVF_wm_CLEANED[2]) <- "Value"
HC50_ISOVF_allNODDI <- rbind(HC50_ISOVF_gm_CLEANED,HC50_ISOVF_wm_CLEANED)
# Export
write.csv(HC50_ISOVF_allNODDI,paste0(main_dir,"Data/harvardcort50/Cleaned/HC50_ISOVF_NODDI.csv"), row.names = FALSE)
